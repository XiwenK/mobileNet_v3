2022-11-20 14:40:46,982 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Oct 21 2022, 23:50:54) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /home/MSAI/szhang064/miniconda3/envs/mmdl2
NVCC: Cuda compilation tools, release 11.7, V11.7.99
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
PyTorch: 1.13.0
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.0
OpenCV: 4.6.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.7
MMClassification: 0.24.1+8f650b5
------------------------------------------------------------

2022-11-20 14:40:46,982 - mmcls - INFO - Distributed training: True
2022-11-20 14:40:47,083 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(type='MobileNetV3Cifar', arch='large'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='StackedLinearClsHead',
        num_classes=100,
        in_channels=960,
        mid_channels=[1280],
        act_cfg=dict(type='HSwish'),
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
dataset_type = 'CIFAR100'
img_norm_cfg = dict(
    mean=[129.304, 124.07, 112.434], std=[68.17, 65.392, 70.418], to_rgb=False)
train_pipeline = [
    dict(type='RandomCrop', size=32, padding=4),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[129.304, 124.07, 112.434],
        std=[68.17, 65.392, 70.418],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(
        type='Normalize',
        mean=[129.304, 124.07, 112.434],
        std=[68.17, 65.392, 70.418],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=256,
    workers_per_gpu=2,
    train=dict(
        type='CIFAR100',
        data_prefix='data/cifar100',
        pipeline=[
            dict(type='RandomCrop', size=32, padding=4),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[129.304, 124.07, 112.434],
                std=[68.17, 65.392, 70.418],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CIFAR100',
        data_prefix='data/cifar100',
        pipeline=[
            dict(
                type='Normalize',
                mean=[129.304, 124.07, 112.434],
                std=[68.17, 65.392, 70.418],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True),
    test=dict(
        type='CIFAR100',
        data_prefix='data/cifar100',
        pipeline=[
            dict(
                type='Normalize',
                mean=[129.304, 124.07, 112.434],
                std=[68.17, 65.392, 70.418],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True))
optimizer = dict(type='SGD', lr=0.1, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=10, max_keep_ckpts=1)
log_config = dict(
    interval=100,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
lr_config = dict(policy='cyclic', cyclic_times=4, target_ratio=(20, 0.0001))
work_dir = './work_dirs/mobilenet_v3_large_b128_cifar100'
gpu_ids = range(0, 1)

2022-11-20 14:40:47,083 - mmcls - INFO - Set random seed to 1260869049, deterministic: False
2022-11-20 14:40:47,172 - mmcls - INFO - initialize MobileNetV3Cifar with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'nonlinearity': 'leaky_relu'}, {'type': 'Normal', 'layer': ['Linear'], 'std': 0.01}, {'type': 'Constant', 'layer': ['BatchNorm2d'], 'val': 1}]
Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer0.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer0.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.expand_conv.conv.weight - torch.Size([64, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer2.expand_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.expand_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.depthwise_conv.conv.weight - torch.Size([64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.depthwise_conv.conv.weight - torch.Size([72, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 72, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.se.conv2.conv.weight - torch.Size([72, 24, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.se.conv2.conv.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 72, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.expand_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.expand_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.depthwise_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.depthwise_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.se.conv1.conv.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.se.conv2.conv.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.expand_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.expand_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.depthwise_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.depthwise_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.se.conv1.conv.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.se.conv2.conv.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer7.expand_conv.bn.weight - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.expand_conv.bn.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.depthwise_conv.conv.weight - torch.Size([240, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer7.depthwise_conv.bn.weight - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.depthwise_conv.bn.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.linear_conv.conv.weight - torch.Size([80, 240, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer7.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.expand_conv.conv.weight - torch.Size([200, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer8.expand_conv.bn.weight - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.expand_conv.bn.bias - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.depthwise_conv.conv.weight - torch.Size([200, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer8.depthwise_conv.bn.weight - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.depthwise_conv.bn.bias - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.linear_conv.conv.weight - torch.Size([80, 200, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer8.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.expand_conv.conv.weight - torch.Size([184, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer9.expand_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.expand_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.depthwise_conv.conv.weight - torch.Size([184, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer9.depthwise_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.depthwise_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.linear_conv.conv.weight - torch.Size([80, 184, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer9.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.expand_conv.conv.weight - torch.Size([184, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer10.expand_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.expand_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.depthwise_conv.conv.weight - torch.Size([184, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer10.depthwise_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.depthwise_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.linear_conv.conv.weight - torch.Size([80, 184, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer10.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.expand_conv.conv.weight - torch.Size([480, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.expand_conv.bn.weight - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.expand_conv.bn.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.depthwise_conv.conv.weight - torch.Size([480, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.depthwise_conv.bn.weight - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.depthwise_conv.bn.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.se.conv1.conv.weight - torch.Size([120, 480, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.se.conv1.conv.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.se.conv2.conv.weight - torch.Size([480, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.se.conv2.conv.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.linear_conv.conv.weight - torch.Size([112, 480, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.se.conv1.conv.weight - torch.Size([168, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.se.conv1.conv.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.se.conv2.conv.weight - torch.Size([672, 168, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.se.conv2.conv.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.se.conv1.conv.weight - torch.Size([168, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.se.conv1.conv.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.se.conv2.conv.weight - torch.Size([672, 168, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.se.conv2.conv.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.linear_conv.conv.weight - torch.Size([160, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.linear_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.linear_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.expand_conv.conv.weight - torch.Size([960, 160, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.expand_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.expand_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.depthwise_conv.conv.weight - torch.Size([960, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.depthwise_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.depthwise_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.se.conv1.conv.weight - torch.Size([240, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.se.conv1.conv.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.se.conv2.conv.weight - torch.Size([960, 240, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.se.conv2.conv.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.linear_conv.conv.weight - torch.Size([160, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.linear_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.linear_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.expand_conv.conv.weight - torch.Size([960, 160, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.expand_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.expand_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.depthwise_conv.conv.weight - torch.Size([960, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.depthwise_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.depthwise_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.se.conv1.conv.weight - torch.Size([240, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.se.conv1.conv.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.se.conv2.conv.weight - torch.Size([960, 240, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.se.conv2.conv.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.linear_conv.conv.weight - torch.Size([160, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.linear_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.linear_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer16.conv.weight - torch.Size([960, 160, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer16.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer16.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.0.fc.weight - torch.Size([1280, 960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.0.fc.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.1.fc.weight - torch.Size([100, 1280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.1.fc.bias - torch.Size([100]): 
The value is the same before and after calling `init_weights` of ImageClassifier  
2022-11-20 14:40:50,448 - mmcls - INFO - Start running, host: szhang064@SCSEGPU-TC1-08, work_dir: /home/MSAI/szhang064/MobileNet/mmdl/work_dirs/mobilenet_v3_large_b128_cifar100
2022-11-20 14:40:50,449 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) CyclicLrUpdaterHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) DistOptimizerHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-11-20 14:40:50,449 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2022-11-20 14:40:50,449 - mmcls - INFO - Checkpoints will be saved to /home/MSAI/szhang064/MobileNet/mmdl/work_dirs/mobilenet_v3_large_b128_cifar100 by HardDiskBackend.
2022-11-20 14:41:04,785 - mmcls - INFO - Epoch [1][100/196]	lr: 1.030e-01, eta: 1:30:46, time: 0.139, data_time: 0.031, memory: 2868, loss: 4.2771
2022-11-20 14:41:17,434 - mmcls - INFO - Epoch(val) [1][40]	accuracy_top-1: 1.0000, accuracy_top-5: 5.1300
2022-11-20 14:41:28,399 - mmcls - INFO - Epoch [2][100/196]	lr: 1.264e-01, eta: 0:54:28, time: 0.109, data_time: 0.022, memory: 2868, loss: 3.3722
2022-11-20 14:41:40,546 - mmcls - INFO - Epoch(val) [2][40]	accuracy_top-1: 6.5600, accuracy_top-5: 22.0400
2022-11-20 14:41:51,449 - mmcls - INFO - Epoch [3][100/196]	lr: 1.726e-01, eta: 0:46:52, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.7787
2022-11-20 14:42:03,607 - mmcls - INFO - Epoch(val) [3][40]	accuracy_top-1: 15.1000, accuracy_top-5: 39.9000
2022-11-20 14:42:14,704 - mmcls - INFO - Epoch [4][100/196]	lr: 2.404e-01, eta: 0:43:40, time: 0.111, data_time: 0.023, memory: 2868, loss: 2.4548
2022-11-20 14:42:26,847 - mmcls - INFO - Epoch(val) [4][40]	accuracy_top-1: 3.8400, accuracy_top-5: 12.2000
2022-11-20 14:42:37,647 - mmcls - INFO - Epoch [5][100/196]	lr: 3.281e-01, eta: 0:41:36, time: 0.108, data_time: 0.022, memory: 2868, loss: 2.2893
2022-11-20 14:42:49,547 - mmcls - INFO - Epoch(val) [5][40]	accuracy_top-1: 9.5600, accuracy_top-5: 26.0900
2022-11-20 14:43:00,405 - mmcls - INFO - Epoch [6][100/196]	lr: 4.336e-01, eta: 0:40:15, time: 0.108, data_time: 0.022, memory: 2868, loss: 2.1120
2022-11-20 14:43:12,266 - mmcls - INFO - Epoch(val) [6][40]	accuracy_top-1: 27.2600, accuracy_top-5: 54.6600
2022-11-20 14:43:23,138 - mmcls - INFO - Epoch [7][100/196]	lr: 5.543e-01, eta: 0:39:16, time: 0.108, data_time: 0.022, memory: 2868, loss: 2.0058
2022-11-20 14:43:35,057 - mmcls - INFO - Epoch(val) [7][40]	accuracy_top-1: 27.2100, accuracy_top-5: 55.7300
2022-11-20 14:43:45,933 - mmcls - INFO - Epoch [8][100/196]	lr: 6.872e-01, eta: 0:38:29, time: 0.109, data_time: 0.022, memory: 2868, loss: 1.9726
2022-11-20 14:43:57,900 - mmcls - INFO - Epoch(val) [8][40]	accuracy_top-1: 20.8300, accuracy_top-5: 48.0000
2022-11-20 14:44:08,823 - mmcls - INFO - Epoch [9][100/196]	lr: 8.290e-01, eta: 0:37:53, time: 0.109, data_time: 0.022, memory: 2868, loss: 1.9642
2022-11-20 14:44:20,906 - mmcls - INFO - Epoch(val) [9][40]	accuracy_top-1: 29.7800, accuracy_top-5: 60.2700
2022-11-20 14:44:31,823 - mmcls - INFO - Epoch [10][100/196]	lr: 9.762e-01, eta: 0:37:21, time: 0.109, data_time: 0.022, memory: 2868, loss: 1.9746
2022-11-20 14:44:40,137 - mmcls - INFO - Saving checkpoint at 10 epochs
2022-11-20 14:44:44,170 - mmcls - INFO - Epoch(val) [10][40]	accuracy_top-1: 28.7300, accuracy_top-5: 58.5100
2022-11-20 14:44:55,095 - mmcls - INFO - Epoch [11][100/196]	lr: 1.125e+00, eta: 0:36:54, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.0063
2022-11-20 14:45:07,500 - mmcls - INFO - Epoch(val) [11][40]	accuracy_top-1: 25.7800, accuracy_top-5: 53.7700
2022-11-20 14:45:18,465 - mmcls - INFO - Epoch [12][100/196]	lr: 1.273e+00, eta: 0:36:30, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.0864
2022-11-20 14:45:30,566 - mmcls - INFO - Epoch(val) [12][40]	accuracy_top-1: 25.9700, accuracy_top-5: 56.0100
2022-11-20 14:45:41,510 - mmcls - INFO - Epoch [13][100/196]	lr: 1.414e+00, eta: 0:36:08, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.1372
2022-11-20 14:45:53,547 - mmcls - INFO - Epoch(val) [13][40]	accuracy_top-1: 21.3800, accuracy_top-5: 46.4200
2022-11-20 14:46:04,516 - mmcls - INFO - Epoch [14][100/196]	lr: 1.547e+00, eta: 0:35:48, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.2183
2022-11-20 14:46:16,562 - mmcls - INFO - Epoch(val) [14][40]	accuracy_top-1: 18.9000, accuracy_top-5: 43.5500
2022-11-20 14:46:27,561 - mmcls - INFO - Epoch [15][100/196]	lr: 1.668e+00, eta: 0:35:29, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2250
2022-11-20 14:46:39,584 - mmcls - INFO - Epoch(val) [15][40]	accuracy_top-1: 11.2500, accuracy_top-5: 29.1300
2022-11-20 14:46:50,488 - mmcls - INFO - Epoch [16][100/196]	lr: 1.773e+00, eta: 0:35:10, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.3571
2022-11-20 14:47:02,540 - mmcls - INFO - Epoch(val) [16][40]	accuracy_top-1: 26.8400, accuracy_top-5: 59.1800
2022-11-20 14:47:13,367 - mmcls - INFO - Epoch [17][100/196]	lr: 1.860e+00, eta: 0:34:52, time: 0.108, data_time: 0.022, memory: 2868, loss: 2.3956
2022-11-20 14:47:25,516 - mmcls - INFO - Epoch(val) [17][40]	accuracy_top-1: 17.1200, accuracy_top-5: 41.4900
2022-11-20 14:47:36,539 - mmcls - INFO - Epoch [18][100/196]	lr: 1.928e+00, eta: 0:34:36, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.4255
2022-11-20 14:47:48,667 - mmcls - INFO - Epoch(val) [18][40]	accuracy_top-1: 17.5500, accuracy_top-5: 40.5000
2022-11-20 14:47:59,657 - mmcls - INFO - Epoch [19][100/196]	lr: 1.974e+00, eta: 0:34:21, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.5551
2022-11-20 14:48:11,803 - mmcls - INFO - Epoch(val) [19][40]	accuracy_top-1: 16.4400, accuracy_top-5: 38.8400
2022-11-20 14:48:22,817 - mmcls - INFO - Epoch [20][100/196]	lr: 1.997e+00, eta: 0:34:06, time: 0.110, data_time: 0.021, memory: 2868, loss: 2.5745
2022-11-20 14:48:31,235 - mmcls - INFO - Saving checkpoint at 20 epochs
2022-11-20 14:48:35,457 - mmcls - INFO - Epoch(val) [20][40]	accuracy_top-1: 19.3400, accuracy_top-5: 46.0700
2022-11-20 14:48:46,479 - mmcls - INFO - Epoch [21][100/196]	lr: 1.999e+00, eta: 0:33:52, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.6569
2022-11-20 14:48:58,630 - mmcls - INFO - Epoch(val) [21][40]	accuracy_top-1: 16.7500, accuracy_top-5: 42.2000
2022-11-20 14:49:09,628 - mmcls - INFO - Epoch [22][100/196]	lr: 1.988e+00, eta: 0:33:37, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.5694
2022-11-20 14:49:21,798 - mmcls - INFO - Epoch(val) [22][40]	accuracy_top-1: 8.1000, accuracy_top-5: 21.1700
2022-11-20 14:49:32,822 - mmcls - INFO - Epoch [23][100/196]	lr: 1.966e+00, eta: 0:33:24, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.5431
2022-11-20 14:49:44,966 - mmcls - INFO - Epoch(val) [23][40]	accuracy_top-1: 13.5000, accuracy_top-5: 33.9900
2022-11-20 14:49:55,946 - mmcls - INFO - Epoch [24][100/196]	lr: 1.933e+00, eta: 0:33:10, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.4593
2022-11-20 14:50:08,094 - mmcls - INFO - Epoch(val) [24][40]	accuracy_top-1: 14.3900, accuracy_top-5: 38.0300
2022-11-20 14:50:19,106 - mmcls - INFO - Epoch [25][100/196]	lr: 1.891e+00, eta: 0:32:57, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3903
2022-11-20 14:50:31,263 - mmcls - INFO - Epoch(val) [25][40]	accuracy_top-1: 25.2500, accuracy_top-5: 55.0700
2022-11-20 14:50:42,374 - mmcls - INFO - Epoch [26][100/196]	lr: 1.838e+00, eta: 0:32:44, time: 0.111, data_time: 0.023, memory: 2868, loss: 2.3402
2022-11-20 14:50:54,515 - mmcls - INFO - Epoch(val) [26][40]	accuracy_top-1: 24.2100, accuracy_top-5: 54.5000
2022-11-20 14:51:05,520 - mmcls - INFO - Epoch [27][100/196]	lr: 1.777e+00, eta: 0:32:31, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2116
2022-11-20 14:51:17,653 - mmcls - INFO - Epoch(val) [27][40]	accuracy_top-1: 15.8000, accuracy_top-5: 40.0700
2022-11-20 14:51:28,694 - mmcls - INFO - Epoch [28][100/196]	lr: 1.707e+00, eta: 0:32:18, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1983
2022-11-20 14:51:40,865 - mmcls - INFO - Epoch(val) [28][40]	accuracy_top-1: 15.8100, accuracy_top-5: 39.4800
2022-11-20 14:51:51,933 - mmcls - INFO - Epoch [29][100/196]	lr: 1.629e+00, eta: 0:32:06, time: 0.110, data_time: 0.023, memory: 2868, loss: 2.1267
2022-11-20 14:52:04,096 - mmcls - INFO - Epoch(val) [29][40]	accuracy_top-1: 13.4400, accuracy_top-5: 33.8600
2022-11-20 14:52:15,093 - mmcls - INFO - Epoch [30][100/196]	lr: 1.544e+00, eta: 0:31:53, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0627
2022-11-20 14:52:23,473 - mmcls - INFO - Saving checkpoint at 30 epochs
2022-11-20 14:52:27,716 - mmcls - INFO - Epoch(val) [30][40]	accuracy_top-1: 11.8200, accuracy_top-5: 31.7500
2022-11-20 14:52:38,728 - mmcls - INFO - Epoch [31][100/196]	lr: 1.454e+00, eta: 0:31:41, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.9863
2022-11-20 14:52:50,883 - mmcls - INFO - Epoch(val) [31][40]	accuracy_top-1: 11.2200, accuracy_top-5: 33.0100
2022-11-20 14:53:01,886 - mmcls - INFO - Epoch [32][100/196]	lr: 1.358e+00, eta: 0:31:28, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8960
2022-11-20 14:53:14,006 - mmcls - INFO - Epoch(val) [32][40]	accuracy_top-1: 32.3100, accuracy_top-5: 61.7900
2022-11-20 14:53:24,996 - mmcls - INFO - Epoch [33][100/196]	lr: 1.258e+00, eta: 0:31:16, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8119
2022-11-20 14:53:37,136 - mmcls - INFO - Epoch(val) [33][40]	accuracy_top-1: 32.6100, accuracy_top-5: 65.4300
2022-11-20 14:53:48,187 - mmcls - INFO - Epoch [34][100/196]	lr: 1.156e+00, eta: 0:31:04, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7171
2022-11-20 14:54:00,380 - mmcls - INFO - Epoch(val) [34][40]	accuracy_top-1: 29.1900, accuracy_top-5: 58.7100
2022-11-20 14:54:11,372 - mmcls - INFO - Epoch [35][100/196]	lr: 1.052e+00, eta: 0:30:51, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.6390
2022-11-20 14:54:23,514 - mmcls - INFO - Epoch(val) [35][40]	accuracy_top-1: 37.1500, accuracy_top-5: 69.2100
2022-11-20 14:54:34,504 - mmcls - INFO - Epoch [36][100/196]	lr: 9.471e-01, eta: 0:30:39, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5741
2022-11-20 14:54:46,693 - mmcls - INFO - Epoch(val) [36][40]	accuracy_top-1: 34.0300, accuracy_top-5: 66.1800
2022-11-20 14:54:57,707 - mmcls - INFO - Epoch [37][100/196]	lr: 8.430e-01, eta: 0:30:27, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.4742
2022-11-20 14:55:09,877 - mmcls - INFO - Epoch(val) [37][40]	accuracy_top-1: 26.0600, accuracy_top-5: 54.7300
2022-11-20 14:55:20,882 - mmcls - INFO - Epoch [38][100/196]	lr: 7.407e-01, eta: 0:30:15, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3601
2022-11-20 14:55:33,027 - mmcls - INFO - Epoch(val) [38][40]	accuracy_top-1: 39.7500, accuracy_top-5: 70.5100
2022-11-20 14:55:44,063 - mmcls - INFO - Epoch [39][100/196]	lr: 6.411e-01, eta: 0:30:03, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2797
2022-11-20 14:55:56,270 - mmcls - INFO - Epoch(val) [39][40]	accuracy_top-1: 32.1000, accuracy_top-5: 66.2100
2022-11-20 14:56:07,315 - mmcls - INFO - Epoch [40][100/196]	lr: 5.455e-01, eta: 0:29:51, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.1798
2022-11-20 14:56:15,682 - mmcls - INFO - Saving checkpoint at 40 epochs
2022-11-20 14:56:19,953 - mmcls - INFO - Epoch(val) [40][40]	accuracy_top-1: 45.7500, accuracy_top-5: 77.4600
2022-11-20 14:56:31,093 - mmcls - INFO - Epoch [41][100/196]	lr: 4.549e-01, eta: 0:29:40, time: 0.111, data_time: 0.024, memory: 2868, loss: 1.0687
2022-11-20 14:56:43,364 - mmcls - INFO - Epoch(val) [41][40]	accuracy_top-1: 50.3600, accuracy_top-5: 80.7200
2022-11-20 14:56:54,355 - mmcls - INFO - Epoch [42][100/196]	lr: 3.703e-01, eta: 0:29:28, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.9917
2022-11-20 14:57:06,887 - mmcls - INFO - Epoch(val) [42][40]	accuracy_top-1: 47.7900, accuracy_top-5: 79.1400
2022-11-20 14:57:17,909 - mmcls - INFO - Epoch [43][100/196]	lr: 2.925e-01, eta: 0:29:16, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.8477
2022-11-20 14:57:30,107 - mmcls - INFO - Epoch(val) [43][40]	accuracy_top-1: 57.7900, accuracy_top-5: 85.9800
2022-11-20 14:57:41,127 - mmcls - INFO - Epoch [44][100/196]	lr: 2.225e-01, eta: 0:29:05, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.7538
2022-11-20 14:57:53,315 - mmcls - INFO - Epoch(val) [44][40]	accuracy_top-1: 54.0800, accuracy_top-5: 82.7300
2022-11-20 14:58:04,333 - mmcls - INFO - Epoch [45][100/196]	lr: 1.610e-01, eta: 0:28:53, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.6510
2022-11-20 14:58:16,796 - mmcls - INFO - Epoch(val) [45][40]	accuracy_top-1: 60.9600, accuracy_top-5: 87.4600
2022-11-20 14:58:27,865 - mmcls - INFO - Epoch [46][100/196]	lr: 1.088e-01, eta: 0:28:41, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.5630
2022-11-20 14:58:40,108 - mmcls - INFO - Epoch(val) [46][40]	accuracy_top-1: 66.1500, accuracy_top-5: 90.4500
2022-11-20 14:58:51,127 - mmcls - INFO - Epoch [47][100/196]	lr: 6.624e-02, eta: 0:28:30, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4605
2022-11-20 14:59:03,268 - mmcls - INFO - Epoch(val) [47][40]	accuracy_top-1: 69.4400, accuracy_top-5: 91.5700
2022-11-20 14:59:14,239 - mmcls - INFO - Epoch [48][100/196]	lr: 3.395e-02, eta: 0:28:18, time: 0.109, data_time: 0.022, memory: 2868, loss: 0.3990
2022-11-20 14:59:26,366 - mmcls - INFO - Epoch(val) [48][40]	accuracy_top-1: 70.9400, accuracy_top-5: 92.4800
2022-11-20 14:59:37,319 - mmcls - INFO - Epoch [49][100/196]	lr: 1.224e-02, eta: 0:28:06, time: 0.109, data_time: 0.022, memory: 2868, loss: 0.3510
2022-11-20 14:59:49,466 - mmcls - INFO - Epoch(val) [49][40]	accuracy_top-1: 71.4600, accuracy_top-5: 92.5700
2022-11-20 15:00:00,439 - mmcls - INFO - Epoch [50][100/196]	lr: 1.353e-03, eta: 0:27:54, time: 0.109, data_time: 0.022, memory: 2868, loss: 0.3390
2022-11-20 15:00:08,813 - mmcls - INFO - Saving checkpoint at 50 epochs
2022-11-20 15:00:12,947 - mmcls - INFO - Epoch(val) [50][40]	accuracy_top-1: 71.5600, accuracy_top-5: 92.4800
2022-11-20 15:00:24,059 - mmcls - INFO - Epoch [51][100/196]	lr: 1.030e-01, eta: 0:27:43, time: 0.111, data_time: 0.024, memory: 2868, loss: 0.4438
2022-11-20 15:00:36,210 - mmcls - INFO - Epoch(val) [51][40]	accuracy_top-1: 66.1500, accuracy_top-5: 90.0800
2022-11-20 15:00:47,200 - mmcls - INFO - Epoch [52][100/196]	lr: 1.264e-01, eta: 0:27:32, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4783
2022-11-20 15:00:59,382 - mmcls - INFO - Epoch(val) [52][40]	accuracy_top-1: 63.5900, accuracy_top-5: 88.9900
2022-11-20 15:01:10,387 - mmcls - INFO - Epoch [53][100/196]	lr: 1.726e-01, eta: 0:27:20, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.5589
2022-11-20 15:01:22,529 - mmcls - INFO - Epoch(val) [53][40]	accuracy_top-1: 62.0100, accuracy_top-5: 87.9000
2022-11-20 15:01:33,578 - mmcls - INFO - Epoch [54][100/196]	lr: 2.404e-01, eta: 0:27:09, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.6974
2022-11-20 15:01:45,692 - mmcls - INFO - Epoch(val) [54][40]	accuracy_top-1: 55.2400, accuracy_top-5: 82.8700
2022-11-20 15:01:56,664 - mmcls - INFO - Epoch [55][100/196]	lr: 3.281e-01, eta: 0:26:57, time: 0.109, data_time: 0.022, memory: 2868, loss: 0.8681
2022-11-20 15:02:08,786 - mmcls - INFO - Epoch(val) [55][40]	accuracy_top-1: 49.2100, accuracy_top-5: 78.4300
2022-11-20 15:02:19,778 - mmcls - INFO - Epoch [56][100/196]	lr: 4.336e-01, eta: 0:26:46, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.0173
2022-11-20 15:02:32,030 - mmcls - INFO - Epoch(val) [56][40]	accuracy_top-1: 35.9700, accuracy_top-5: 64.9600
2022-11-20 15:02:43,044 - mmcls - INFO - Epoch [57][100/196]	lr: 5.543e-01, eta: 0:26:34, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.1486
2022-11-20 15:02:55,182 - mmcls - INFO - Epoch(val) [57][40]	accuracy_top-1: 22.1400, accuracy_top-5: 47.7600
2022-11-20 15:03:06,155 - mmcls - INFO - Epoch [58][100/196]	lr: 6.872e-01, eta: 0:26:23, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2801
2022-11-20 15:03:18,324 - mmcls - INFO - Epoch(val) [58][40]	accuracy_top-1: 11.7800, accuracy_top-5: 28.7600
2022-11-20 15:03:29,341 - mmcls - INFO - Epoch [59][100/196]	lr: 8.290e-01, eta: 0:26:11, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3915
2022-11-20 15:03:41,520 - mmcls - INFO - Epoch(val) [59][40]	accuracy_top-1: 25.1300, accuracy_top-5: 50.9300
2022-11-20 15:03:52,514 - mmcls - INFO - Epoch [60][100/196]	lr: 9.762e-01, eta: 0:26:00, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5129
2022-11-20 15:04:00,873 - mmcls - INFO - Saving checkpoint at 60 epochs
2022-11-20 15:04:05,097 - mmcls - INFO - Epoch(val) [60][40]	accuracy_top-1: 23.7500, accuracy_top-5: 48.5100
2022-11-20 15:04:16,122 - mmcls - INFO - Epoch [61][100/196]	lr: 1.125e+00, eta: 0:25:48, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5982
2022-11-20 15:04:28,261 - mmcls - INFO - Epoch(val) [61][40]	accuracy_top-1: 27.3600, accuracy_top-5: 55.0900
2022-11-20 15:04:39,265 - mmcls - INFO - Epoch [62][100/196]	lr: 1.273e+00, eta: 0:25:37, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7014
2022-11-20 15:04:51,408 - mmcls - INFO - Epoch(val) [62][40]	accuracy_top-1: 20.9000, accuracy_top-5: 44.6300
2022-11-20 15:05:02,425 - mmcls - INFO - Epoch [63][100/196]	lr: 1.414e+00, eta: 0:25:26, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8315
2022-11-20 15:05:14,553 - mmcls - INFO - Epoch(val) [63][40]	accuracy_top-1: 32.1700, accuracy_top-5: 60.1500
2022-11-20 15:05:25,556 - mmcls - INFO - Epoch [64][100/196]	lr: 1.547e+00, eta: 0:25:14, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.9193
2022-11-20 15:05:37,680 - mmcls - INFO - Epoch(val) [64][40]	accuracy_top-1: 21.9800, accuracy_top-5: 47.4800
2022-11-20 15:05:48,692 - mmcls - INFO - Epoch [65][100/196]	lr: 1.668e+00, eta: 0:25:03, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0229
2022-11-20 15:06:00,833 - mmcls - INFO - Epoch(val) [65][40]	accuracy_top-1: 18.0700, accuracy_top-5: 41.6800
2022-11-20 15:06:11,854 - mmcls - INFO - Epoch [66][100/196]	lr: 1.773e+00, eta: 0:24:52, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1508
2022-11-20 15:06:24,013 - mmcls - INFO - Epoch(val) [66][40]	accuracy_top-1: 19.8600, accuracy_top-5: 48.7300
2022-11-20 15:06:35,018 - mmcls - INFO - Epoch [67][100/196]	lr: 1.860e+00, eta: 0:24:40, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1995
2022-11-20 15:06:47,207 - mmcls - INFO - Epoch(val) [67][40]	accuracy_top-1: 26.4300, accuracy_top-5: 56.2300
2022-11-20 15:06:58,241 - mmcls - INFO - Epoch [68][100/196]	lr: 1.928e+00, eta: 0:24:29, time: 0.110, data_time: 0.023, memory: 2868, loss: 2.2461
2022-11-20 15:07:10,373 - mmcls - INFO - Epoch(val) [68][40]	accuracy_top-1: 15.3700, accuracy_top-5: 39.2200
2022-11-20 15:07:21,378 - mmcls - INFO - Epoch [69][100/196]	lr: 1.974e+00, eta: 0:24:18, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3551
2022-11-20 15:07:33,529 - mmcls - INFO - Epoch(val) [69][40]	accuracy_top-1: 23.3600, accuracy_top-5: 50.7000
2022-11-20 15:07:44,602 - mmcls - INFO - Epoch [70][100/196]	lr: 1.997e+00, eta: 0:24:07, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3981
2022-11-20 15:07:52,985 - mmcls - INFO - Saving checkpoint at 70 epochs
2022-11-20 15:07:57,057 - mmcls - INFO - Epoch(val) [70][40]	accuracy_top-1: 18.7400, accuracy_top-5: 43.2300
2022-11-20 15:08:08,119 - mmcls - INFO - Epoch [71][100/196]	lr: 1.999e+00, eta: 0:23:55, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3952
2022-11-20 15:08:22,058 - mmcls - INFO - Epoch(val) [71][40]	accuracy_top-1: 19.0600, accuracy_top-5: 46.2200
2022-11-20 15:08:33,068 - mmcls - INFO - Epoch [72][100/196]	lr: 1.988e+00, eta: 0:23:44, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.4308
2022-11-20 15:08:45,212 - mmcls - INFO - Epoch(val) [72][40]	accuracy_top-1: 18.8200, accuracy_top-5: 43.4700
2022-11-20 15:08:56,230 - mmcls - INFO - Epoch [73][100/196]	lr: 1.966e+00, eta: 0:23:33, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.4053
2022-11-20 15:09:08,408 - mmcls - INFO - Epoch(val) [73][40]	accuracy_top-1: 12.3800, accuracy_top-5: 33.4900
2022-11-20 15:09:19,436 - mmcls - INFO - Epoch [74][100/196]	lr: 1.933e+00, eta: 0:23:22, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2934
2022-11-20 15:09:31,655 - mmcls - INFO - Epoch(val) [74][40]	accuracy_top-1: 13.9200, accuracy_top-5: 36.4900
2022-11-20 15:09:42,649 - mmcls - INFO - Epoch [75][100/196]	lr: 1.891e+00, eta: 0:23:10, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3084
2022-11-20 15:09:54,931 - mmcls - INFO - Epoch(val) [75][40]	accuracy_top-1: 20.3000, accuracy_top-5: 44.8000
2022-11-20 15:10:05,918 - mmcls - INFO - Epoch [76][100/196]	lr: 1.838e+00, eta: 0:22:59, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1813
2022-11-20 15:10:18,091 - mmcls - INFO - Epoch(val) [76][40]	accuracy_top-1: 17.8600, accuracy_top-5: 39.0500
2022-11-20 15:10:29,069 - mmcls - INFO - Epoch [77][100/196]	lr: 1.777e+00, eta: 0:22:48, time: 0.110, data_time: 0.021, memory: 2868, loss: 2.1496
2022-11-20 15:10:41,274 - mmcls - INFO - Epoch(val) [77][40]	accuracy_top-1: 21.6300, accuracy_top-5: 45.9400
2022-11-20 15:10:52,292 - mmcls - INFO - Epoch [78][100/196]	lr: 1.707e+00, eta: 0:22:37, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0727
2022-11-20 15:11:04,487 - mmcls - INFO - Epoch(val) [78][40]	accuracy_top-1: 19.0400, accuracy_top-5: 42.3100
2022-11-20 15:11:15,512 - mmcls - INFO - Epoch [79][100/196]	lr: 1.629e+00, eta: 0:22:25, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0339
2022-11-20 15:11:27,708 - mmcls - INFO - Epoch(val) [79][40]	accuracy_top-1: 12.8500, accuracy_top-5: 36.1500
2022-11-20 15:11:38,714 - mmcls - INFO - Epoch [80][100/196]	lr: 1.544e+00, eta: 0:22:14, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.9702
2022-11-20 15:11:47,111 - mmcls - INFO - Saving checkpoint at 80 epochs
2022-11-20 15:11:51,182 - mmcls - INFO - Epoch(val) [80][40]	accuracy_top-1: 16.5900, accuracy_top-5: 40.7100
2022-11-20 15:12:02,205 - mmcls - INFO - Epoch [81][100/196]	lr: 1.454e+00, eta: 0:22:03, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8710
2022-11-20 15:12:14,384 - mmcls - INFO - Epoch(val) [81][40]	accuracy_top-1: 29.9200, accuracy_top-5: 62.1400
2022-11-20 15:12:25,424 - mmcls - INFO - Epoch [82][100/196]	lr: 1.358e+00, eta: 0:21:52, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8113
2022-11-20 15:12:37,718 - mmcls - INFO - Epoch(val) [82][40]	accuracy_top-1: 29.4800, accuracy_top-5: 60.8000
2022-11-20 15:12:48,732 - mmcls - INFO - Epoch [83][100/196]	lr: 1.258e+00, eta: 0:21:41, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7678
2022-11-20 15:13:00,901 - mmcls - INFO - Epoch(val) [83][40]	accuracy_top-1: 25.7300, accuracy_top-5: 54.8900
2022-11-20 15:13:11,968 - mmcls - INFO - Epoch [84][100/196]	lr: 1.156e+00, eta: 0:21:30, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.6687
2022-11-20 15:13:24,162 - mmcls - INFO - Epoch(val) [84][40]	accuracy_top-1: 20.9100, accuracy_top-5: 45.3200
2022-11-20 15:13:35,158 - mmcls - INFO - Epoch [85][100/196]	lr: 1.052e+00, eta: 0:21:18, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5910
2022-11-20 15:13:47,337 - mmcls - INFO - Epoch(val) [85][40]	accuracy_top-1: 37.1000, accuracy_top-5: 68.3300
2022-11-20 15:13:58,345 - mmcls - INFO - Epoch [86][100/196]	lr: 9.471e-01, eta: 0:21:07, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.4720
2022-11-20 15:14:10,538 - mmcls - INFO - Epoch(val) [86][40]	accuracy_top-1: 34.8200, accuracy_top-5: 65.4700
2022-11-20 15:14:21,577 - mmcls - INFO - Epoch [87][100/196]	lr: 8.430e-01, eta: 0:20:56, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3842
2022-11-20 15:14:33,766 - mmcls - INFO - Epoch(val) [87][40]	accuracy_top-1: 40.4000, accuracy_top-5: 71.5300
2022-11-20 15:14:44,789 - mmcls - INFO - Epoch [88][100/196]	lr: 7.407e-01, eta: 0:20:45, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2848
2022-11-20 15:14:56,955 - mmcls - INFO - Epoch(val) [88][40]	accuracy_top-1: 33.5700, accuracy_top-5: 66.0500
2022-11-20 15:15:07,998 - mmcls - INFO - Epoch [89][100/196]	lr: 6.411e-01, eta: 0:20:34, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2193
2022-11-20 15:15:20,154 - mmcls - INFO - Epoch(val) [89][40]	accuracy_top-1: 42.6500, accuracy_top-5: 73.3500
2022-11-20 15:15:31,158 - mmcls - INFO - Epoch [90][100/196]	lr: 5.455e-01, eta: 0:20:22, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.1275
2022-11-20 15:15:39,544 - mmcls - INFO - Saving checkpoint at 90 epochs
2022-11-20 15:15:43,723 - mmcls - INFO - Epoch(val) [90][40]	accuracy_top-1: 36.4400, accuracy_top-5: 69.8100
2022-11-20 15:15:54,747 - mmcls - INFO - Epoch [91][100/196]	lr: 4.549e-01, eta: 0:20:11, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.0134
2022-11-20 15:16:06,925 - mmcls - INFO - Epoch(val) [91][40]	accuracy_top-1: 37.5800, accuracy_top-5: 68.4600
2022-11-20 15:16:18,017 - mmcls - INFO - Epoch [92][100/196]	lr: 3.703e-01, eta: 0:20:00, time: 0.111, data_time: 0.022, memory: 2868, loss: 0.9156
2022-11-20 15:16:30,207 - mmcls - INFO - Epoch(val) [92][40]	accuracy_top-1: 42.2100, accuracy_top-5: 72.8200
2022-11-20 15:16:41,285 - mmcls - INFO - Epoch [93][100/196]	lr: 2.925e-01, eta: 0:19:49, time: 0.111, data_time: 0.022, memory: 2868, loss: 0.8054
2022-11-20 15:16:53,453 - mmcls - INFO - Epoch(val) [93][40]	accuracy_top-1: 54.0500, accuracy_top-5: 82.7100
2022-11-20 15:17:04,441 - mmcls - INFO - Epoch [94][100/196]	lr: 2.225e-01, eta: 0:19:38, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.6971
2022-11-20 15:17:16,571 - mmcls - INFO - Epoch(val) [94][40]	accuracy_top-1: 58.0900, accuracy_top-5: 85.6100
2022-11-20 15:17:27,592 - mmcls - INFO - Epoch [95][100/196]	lr: 1.610e-01, eta: 0:19:27, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.5886
2022-11-20 15:17:39,723 - mmcls - INFO - Epoch(val) [95][40]	accuracy_top-1: 62.7500, accuracy_top-5: 88.1300
2022-11-20 15:17:50,734 - mmcls - INFO - Epoch [96][100/196]	lr: 1.088e-01, eta: 0:19:16, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4912
2022-11-20 15:18:02,967 - mmcls - INFO - Epoch(val) [96][40]	accuracy_top-1: 67.5500, accuracy_top-5: 90.5300
2022-11-20 15:18:13,967 - mmcls - INFO - Epoch [97][100/196]	lr: 6.624e-02, eta: 0:19:05, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4182
2022-11-20 15:18:26,189 - mmcls - INFO - Epoch(val) [97][40]	accuracy_top-1: 69.1500, accuracy_top-5: 91.9200
2022-11-20 15:18:37,190 - mmcls - INFO - Epoch [98][100/196]	lr: 3.395e-02, eta: 0:18:53, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.3533
2022-11-20 15:18:49,554 - mmcls - INFO - Epoch(val) [98][40]	accuracy_top-1: 70.9300, accuracy_top-5: 92.4900
2022-11-20 15:19:00,581 - mmcls - INFO - Epoch [99][100/196]	lr: 1.224e-02, eta: 0:18:42, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.3075
2022-11-20 15:19:12,797 - mmcls - INFO - Epoch(val) [99][40]	accuracy_top-1: 71.5400, accuracy_top-5: 92.7300
2022-11-20 15:19:23,859 - mmcls - INFO - Epoch [100][100/196]	lr: 1.353e-03, eta: 0:18:31, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.2901
2022-11-20 15:19:32,291 - mmcls - INFO - Saving checkpoint at 100 epochs
2022-11-20 15:19:36,453 - mmcls - INFO - Epoch(val) [100][40]	accuracy_top-1: 71.7100, accuracy_top-5: 92.8000
2022-11-20 15:19:47,433 - mmcls - INFO - Epoch [101][100/196]	lr: 1.030e-01, eta: 0:18:20, time: 0.110, data_time: 0.021, memory: 2868, loss: 0.3860
2022-11-20 15:19:59,775 - mmcls - INFO - Epoch(val) [101][40]	accuracy_top-1: 67.3600, accuracy_top-5: 90.7600
2022-11-20 15:20:10,792 - mmcls - INFO - Epoch [102][100/196]	lr: 1.264e-01, eta: 0:18:09, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4294
2022-11-20 15:20:22,980 - mmcls - INFO - Epoch(val) [102][40]	accuracy_top-1: 65.6300, accuracy_top-5: 89.8900
2022-11-20 15:20:34,156 - mmcls - INFO - Epoch [103][100/196]	lr: 1.726e-01, eta: 0:17:58, time: 0.111, data_time: 0.023, memory: 2868, loss: 0.5130
2022-11-20 15:20:46,371 - mmcls - INFO - Epoch(val) [103][40]	accuracy_top-1: 61.9200, accuracy_top-5: 88.1100
2022-11-20 15:20:57,376 - mmcls - INFO - Epoch [104][100/196]	lr: 2.404e-01, eta: 0:17:47, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.6470
2022-11-20 15:21:09,585 - mmcls - INFO - Epoch(val) [104][40]	accuracy_top-1: 57.6000, accuracy_top-5: 84.6200
2022-11-20 15:21:20,570 - mmcls - INFO - Epoch [105][100/196]	lr: 3.281e-01, eta: 0:17:36, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.8058
2022-11-20 15:21:32,743 - mmcls - INFO - Epoch(val) [105][40]	accuracy_top-1: 44.8000, accuracy_top-5: 74.4900
2022-11-20 15:21:43,759 - mmcls - INFO - Epoch [106][100/196]	lr: 4.336e-01, eta: 0:17:24, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.9789
2022-11-20 15:21:55,933 - mmcls - INFO - Epoch(val) [106][40]	accuracy_top-1: 33.7400, accuracy_top-5: 64.6400
2022-11-20 15:22:06,947 - mmcls - INFO - Epoch [107][100/196]	lr: 5.543e-01, eta: 0:17:13, time: 0.110, data_time: 0.021, memory: 2868, loss: 1.1109
2022-11-20 15:22:19,116 - mmcls - INFO - Epoch(val) [107][40]	accuracy_top-1: 21.8100, accuracy_top-5: 46.6500
2022-11-20 15:22:30,096 - mmcls - INFO - Epoch [108][100/196]	lr: 6.872e-01, eta: 0:17:02, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2355
2022-11-20 15:22:42,286 - mmcls - INFO - Epoch(val) [108][40]	accuracy_top-1: 15.2200, accuracy_top-5: 37.1000
2022-11-20 15:22:53,319 - mmcls - INFO - Epoch [109][100/196]	lr: 8.290e-01, eta: 0:16:51, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3411
2022-11-20 15:23:05,458 - mmcls - INFO - Epoch(val) [109][40]	accuracy_top-1: 18.5000, accuracy_top-5: 42.5300
2022-11-20 15:23:16,501 - mmcls - INFO - Epoch [110][100/196]	lr: 9.762e-01, eta: 0:16:40, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.4913
2022-11-20 15:23:24,922 - mmcls - INFO - Saving checkpoint at 110 epochs
2022-11-20 15:23:29,077 - mmcls - INFO - Epoch(val) [110][40]	accuracy_top-1: 24.5300, accuracy_top-5: 50.8300
2022-11-20 15:23:40,111 - mmcls - INFO - Epoch [111][100/196]	lr: 1.125e+00, eta: 0:16:29, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.6054
2022-11-20 15:23:53,362 - mmcls - INFO - Epoch(val) [111][40]	accuracy_top-1: 27.8200, accuracy_top-5: 56.3100
2022-11-20 15:24:04,358 - mmcls - INFO - Epoch [112][100/196]	lr: 1.273e+00, eta: 0:16:18, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7013
2022-11-20 15:24:16,501 - mmcls - INFO - Epoch(val) [112][40]	accuracy_top-1: 12.3300, accuracy_top-5: 33.0200
2022-11-20 15:24:27,522 - mmcls - INFO - Epoch [113][100/196]	lr: 1.414e+00, eta: 0:16:07, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7915
2022-11-20 15:24:39,659 - mmcls - INFO - Epoch(val) [113][40]	accuracy_top-1: 28.1900, accuracy_top-5: 57.6700
2022-11-20 15:24:50,640 - mmcls - INFO - Epoch [114][100/196]	lr: 1.547e+00, eta: 0:15:56, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8981
2022-11-20 15:25:02,792 - mmcls - INFO - Epoch(val) [114][40]	accuracy_top-1: 18.0400, accuracy_top-5: 41.7400
2022-11-20 15:25:13,773 - mmcls - INFO - Epoch [115][100/196]	lr: 1.668e+00, eta: 0:15:44, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0216
2022-11-20 15:25:25,976 - mmcls - INFO - Epoch(val) [115][40]	accuracy_top-1: 20.1200, accuracy_top-5: 46.3900
2022-11-20 15:25:36,990 - mmcls - INFO - Epoch [116][100/196]	lr: 1.773e+00, eta: 0:15:33, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1049
2022-11-20 15:25:49,209 - mmcls - INFO - Epoch(val) [116][40]	accuracy_top-1: 25.8800, accuracy_top-5: 55.4500
2022-11-20 15:26:00,217 - mmcls - INFO - Epoch [117][100/196]	lr: 1.860e+00, eta: 0:15:22, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1798
2022-11-20 15:26:12,399 - mmcls - INFO - Epoch(val) [117][40]	accuracy_top-1: 29.3600, accuracy_top-5: 60.4300
2022-11-20 15:26:23,407 - mmcls - INFO - Epoch [118][100/196]	lr: 1.928e+00, eta: 0:15:11, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2473
2022-11-20 15:26:35,633 - mmcls - INFO - Epoch(val) [118][40]	accuracy_top-1: 16.4300, accuracy_top-5: 41.7300
2022-11-20 15:26:46,675 - mmcls - INFO - Epoch [119][100/196]	lr: 1.974e+00, eta: 0:15:00, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2920
2022-11-20 15:27:00,245 - mmcls - INFO - Epoch(val) [119][40]	accuracy_top-1: 26.4000, accuracy_top-5: 55.7400
2022-11-20 15:27:11,295 - mmcls - INFO - Epoch [120][100/196]	lr: 1.997e+00, eta: 0:14:49, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2943
2022-11-20 15:27:19,662 - mmcls - INFO - Saving checkpoint at 120 epochs
2022-11-20 15:27:23,772 - mmcls - INFO - Epoch(val) [120][40]	accuracy_top-1: 22.1700, accuracy_top-5: 47.1500
2022-11-20 15:27:34,800 - mmcls - INFO - Epoch [121][100/196]	lr: 1.999e+00, eta: 0:14:38, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3699
2022-11-20 15:27:46,907 - mmcls - INFO - Epoch(val) [121][40]	accuracy_top-1: 17.0600, accuracy_top-5: 40.5000
2022-11-20 15:27:57,928 - mmcls - INFO - Epoch [122][100/196]	lr: 1.988e+00, eta: 0:14:27, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3573
2022-11-20 15:28:10,108 - mmcls - INFO - Epoch(val) [122][40]	accuracy_top-1: 17.9900, accuracy_top-5: 42.4600
2022-11-20 15:28:21,142 - mmcls - INFO - Epoch [123][100/196]	lr: 1.966e+00, eta: 0:14:16, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3410
2022-11-20 15:28:33,280 - mmcls - INFO - Epoch(val) [123][40]	accuracy_top-1: 10.5500, accuracy_top-5: 30.3800
2022-11-20 15:28:44,285 - mmcls - INFO - Epoch [124][100/196]	lr: 1.933e+00, eta: 0:14:05, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2985
2022-11-20 15:28:56,524 - mmcls - INFO - Epoch(val) [124][40]	accuracy_top-1: 13.7200, accuracy_top-5: 34.9300
2022-11-20 15:29:07,591 - mmcls - INFO - Epoch [125][100/196]	lr: 1.891e+00, eta: 0:13:54, time: 0.111, data_time: 0.022, memory: 2868, loss: 2.1974
2022-11-20 15:29:19,750 - mmcls - INFO - Epoch(val) [125][40]	accuracy_top-1: 17.4600, accuracy_top-5: 39.1500
2022-11-20 15:29:30,772 - mmcls - INFO - Epoch [126][100/196]	lr: 1.838e+00, eta: 0:13:43, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1920
2022-11-20 15:29:42,952 - mmcls - INFO - Epoch(val) [126][40]	accuracy_top-1: 17.3300, accuracy_top-5: 41.6200
2022-11-20 15:29:53,962 - mmcls - INFO - Epoch [127][100/196]	lr: 1.777e+00, eta: 0:13:31, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1095
2022-11-20 15:30:06,104 - mmcls - INFO - Epoch(val) [127][40]	accuracy_top-1: 15.7400, accuracy_top-5: 39.0800
2022-11-20 15:30:17,171 - mmcls - INFO - Epoch [128][100/196]	lr: 1.707e+00, eta: 0:13:20, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0339
2022-11-20 15:30:29,341 - mmcls - INFO - Epoch(val) [128][40]	accuracy_top-1: 26.8200, accuracy_top-5: 55.3800
2022-11-20 15:30:40,331 - mmcls - INFO - Epoch [129][100/196]	lr: 1.629e+00, eta: 0:13:09, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0446
2022-11-20 15:30:52,511 - mmcls - INFO - Epoch(val) [129][40]	accuracy_top-1: 24.0500, accuracy_top-5: 51.9600
2022-11-20 15:31:03,497 - mmcls - INFO - Epoch [130][100/196]	lr: 1.544e+00, eta: 0:12:58, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.9427
2022-11-20 15:31:11,874 - mmcls - INFO - Saving checkpoint at 130 epochs
2022-11-20 15:31:16,052 - mmcls - INFO - Epoch(val) [130][40]	accuracy_top-1: 25.6800, accuracy_top-5: 57.5900
2022-11-20 15:31:27,015 - mmcls - INFO - Epoch [131][100/196]	lr: 1.454e+00, eta: 0:12:47, time: 0.109, data_time: 0.022, memory: 2868, loss: 1.8746
2022-11-20 15:31:39,194 - mmcls - INFO - Epoch(val) [131][40]	accuracy_top-1: 25.3700, accuracy_top-5: 55.4000
2022-11-20 15:31:50,180 - mmcls - INFO - Epoch [132][100/196]	lr: 1.358e+00, eta: 0:12:36, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7720
2022-11-20 15:32:02,372 - mmcls - INFO - Epoch(val) [132][40]	accuracy_top-1: 25.2700, accuracy_top-5: 57.8400
2022-11-20 15:32:13,376 - mmcls - INFO - Epoch [133][100/196]	lr: 1.258e+00, eta: 0:12:25, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7263
2022-11-20 15:32:25,556 - mmcls - INFO - Epoch(val) [133][40]	accuracy_top-1: 33.9100, accuracy_top-5: 64.6700
2022-11-20 15:32:36,532 - mmcls - INFO - Epoch [134][100/196]	lr: 1.156e+00, eta: 0:12:14, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.6369
2022-11-20 15:32:48,685 - mmcls - INFO - Epoch(val) [134][40]	accuracy_top-1: 19.7000, accuracy_top-5: 43.8900
2022-11-20 15:32:59,758 - mmcls - INFO - Epoch [135][100/196]	lr: 1.052e+00, eta: 0:12:03, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5674
2022-11-20 15:33:11,880 - mmcls - INFO - Epoch(val) [135][40]	accuracy_top-1: 23.1100, accuracy_top-5: 49.7200
2022-11-20 15:33:22,929 - mmcls - INFO - Epoch [136][100/196]	lr: 9.471e-01, eta: 0:11:52, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.4541
2022-11-20 15:33:35,107 - mmcls - INFO - Epoch(val) [136][40]	accuracy_top-1: 27.6200, accuracy_top-5: 57.0200
2022-11-20 15:33:46,117 - mmcls - INFO - Epoch [137][100/196]	lr: 8.430e-01, eta: 0:11:41, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3941
2022-11-20 15:33:58,234 - mmcls - INFO - Epoch(val) [137][40]	accuracy_top-1: 32.3200, accuracy_top-5: 62.9400
2022-11-20 15:34:09,278 - mmcls - INFO - Epoch [138][100/196]	lr: 7.407e-01, eta: 0:11:30, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2899
2022-11-20 15:34:21,476 - mmcls - INFO - Epoch(val) [138][40]	accuracy_top-1: 40.0800, accuracy_top-5: 70.6700
2022-11-20 15:34:32,502 - mmcls - INFO - Epoch [139][100/196]	lr: 6.411e-01, eta: 0:11:19, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.1938
2022-11-20 15:34:44,653 - mmcls - INFO - Epoch(val) [139][40]	accuracy_top-1: 37.4200, accuracy_top-5: 66.8700
2022-11-20 15:34:55,683 - mmcls - INFO - Epoch [140][100/196]	lr: 5.455e-01, eta: 0:11:07, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.1068
2022-11-20 15:35:04,050 - mmcls - INFO - Saving checkpoint at 140 epochs
2022-11-20 15:35:08,239 - mmcls - INFO - Epoch(val) [140][40]	accuracy_top-1: 43.7100, accuracy_top-5: 74.2600
2022-11-20 15:35:19,246 - mmcls - INFO - Epoch [141][100/196]	lr: 4.549e-01, eta: 0:10:56, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.0059
2022-11-20 15:35:31,402 - mmcls - INFO - Epoch(val) [141][40]	accuracy_top-1: 46.8600, accuracy_top-5: 77.1500
2022-11-20 15:35:42,406 - mmcls - INFO - Epoch [142][100/196]	lr: 3.703e-01, eta: 0:10:45, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.8928
2022-11-20 15:35:54,683 - mmcls - INFO - Epoch(val) [142][40]	accuracy_top-1: 52.2500, accuracy_top-5: 81.9000
2022-11-20 15:36:05,736 - mmcls - INFO - Epoch [143][100/196]	lr: 2.925e-01, eta: 0:10:34, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.7997
2022-11-20 15:36:17,872 - mmcls - INFO - Epoch(val) [143][40]	accuracy_top-1: 53.1200, accuracy_top-5: 81.8900
2022-11-20 15:36:28,869 - mmcls - INFO - Epoch [144][100/196]	lr: 2.225e-01, eta: 0:10:23, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.6835
2022-11-20 15:36:41,009 - mmcls - INFO - Epoch(val) [144][40]	accuracy_top-1: 56.9200, accuracy_top-5: 84.8300
2022-11-20 15:36:52,022 - mmcls - INFO - Epoch [145][100/196]	lr: 1.610e-01, eta: 0:10:12, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.5783
2022-11-20 15:37:04,190 - mmcls - INFO - Epoch(val) [145][40]	accuracy_top-1: 65.2800, accuracy_top-5: 89.7300
2022-11-20 15:37:15,223 - mmcls - INFO - Epoch [146][100/196]	lr: 1.088e-01, eta: 0:10:01, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.4820
2022-11-20 15:37:27,554 - mmcls - INFO - Epoch(val) [146][40]	accuracy_top-1: 67.5800, accuracy_top-5: 91.0000
2022-11-20 15:37:38,533 - mmcls - INFO - Epoch [147][100/196]	lr: 6.624e-02, eta: 0:09:50, time: 0.110, data_time: 0.021, memory: 2868, loss: 0.4052
2022-11-20 15:37:50,675 - mmcls - INFO - Epoch(val) [147][40]	accuracy_top-1: 70.5100, accuracy_top-5: 92.1800
2022-11-20 15:38:01,676 - mmcls - INFO - Epoch [148][100/196]	lr: 3.395e-02, eta: 0:09:39, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.3444
2022-11-20 15:38:13,948 - mmcls - INFO - Epoch(val) [148][40]	accuracy_top-1: 71.1800, accuracy_top-5: 92.9800
2022-11-20 15:38:24,965 - mmcls - INFO - Epoch [149][100/196]	lr: 1.224e-02, eta: 0:09:28, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.3065
2022-11-20 15:38:37,100 - mmcls - INFO - Epoch(val) [149][40]	accuracy_top-1: 71.6000, accuracy_top-5: 92.9600
2022-11-20 15:38:48,128 - mmcls - INFO - Epoch [150][100/196]	lr: 1.353e-03, eta: 0:09:17, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.2826
2022-11-20 15:38:56,498 - mmcls - INFO - Saving checkpoint at 150 epochs
2022-11-20 15:39:00,614 - mmcls - INFO - Epoch(val) [150][40]	accuracy_top-1: 71.6300, accuracy_top-5: 92.9600
2022-11-20 15:39:11,630 - mmcls - INFO - Epoch [151][100/196]	lr: 1.030e-01, eta: 0:09:06, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.3675
2022-11-20 15:39:23,805 - mmcls - INFO - Epoch(val) [151][40]	accuracy_top-1: 67.4100, accuracy_top-5: 91.1900
2022-11-20 15:39:34,840 - mmcls - INFO - Epoch [152][100/196]	lr: 1.264e-01, eta: 0:08:55, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4170
2022-11-20 15:39:46,976 - mmcls - INFO - Epoch(val) [152][40]	accuracy_top-1: 63.6600, accuracy_top-5: 88.8400
2022-11-20 15:39:58,030 - mmcls - INFO - Epoch [153][100/196]	lr: 1.726e-01, eta: 0:08:44, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.4932
2022-11-20 15:40:10,182 - mmcls - INFO - Epoch(val) [153][40]	accuracy_top-1: 60.6500, accuracy_top-5: 86.9100
2022-11-20 15:40:21,204 - mmcls - INFO - Epoch [154][100/196]	lr: 2.404e-01, eta: 0:08:33, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.6373
2022-11-20 15:40:33,405 - mmcls - INFO - Epoch(val) [154][40]	accuracy_top-1: 53.2200, accuracy_top-5: 82.2400
2022-11-20 15:40:44,405 - mmcls - INFO - Epoch [155][100/196]	lr: 3.281e-01, eta: 0:08:22, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.7933
2022-11-20 15:40:56,563 - mmcls - INFO - Epoch(val) [155][40]	accuracy_top-1: 47.7300, accuracy_top-5: 76.4600
2022-11-20 15:41:07,585 - mmcls - INFO - Epoch [156][100/196]	lr: 4.336e-01, eta: 0:08:11, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.9577
2022-11-20 15:41:19,734 - mmcls - INFO - Epoch(val) [156][40]	accuracy_top-1: 36.5600, accuracy_top-5: 66.1600
2022-11-20 15:41:30,791 - mmcls - INFO - Epoch [157][100/196]	lr: 5.543e-01, eta: 0:08:00, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.0862
2022-11-20 15:41:42,952 - mmcls - INFO - Epoch(val) [157][40]	accuracy_top-1: 24.9500, accuracy_top-5: 50.1100
2022-11-20 15:41:53,895 - mmcls - INFO - Epoch [158][100/196]	lr: 6.872e-01, eta: 0:07:48, time: 0.109, data_time: 0.022, memory: 2868, loss: 1.2461
2022-11-20 15:42:06,111 - mmcls - INFO - Epoch(val) [158][40]	accuracy_top-1: 18.4400, accuracy_top-5: 44.9000
2022-11-20 15:42:17,117 - mmcls - INFO - Epoch [159][100/196]	lr: 8.290e-01, eta: 0:07:37, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3451
2022-11-20 15:42:29,275 - mmcls - INFO - Epoch(val) [159][40]	accuracy_top-1: 17.6500, accuracy_top-5: 39.7100
2022-11-20 15:42:40,308 - mmcls - INFO - Epoch [160][100/196]	lr: 9.762e-01, eta: 0:07:26, time: 0.110, data_time: 0.023, memory: 2868, loss: 1.4522
2022-11-20 15:42:48,693 - mmcls - INFO - Saving checkpoint at 160 epochs
2022-11-20 15:42:52,848 - mmcls - INFO - Epoch(val) [160][40]	accuracy_top-1: 19.2300, accuracy_top-5: 43.6200
2022-11-20 15:43:03,863 - mmcls - INFO - Epoch [161][100/196]	lr: 1.125e+00, eta: 0:07:15, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5989
2022-11-20 15:43:16,057 - mmcls - INFO - Epoch(val) [161][40]	accuracy_top-1: 20.3100, accuracy_top-5: 45.8600
2022-11-20 15:43:27,069 - mmcls - INFO - Epoch [162][100/196]	lr: 1.273e+00, eta: 0:07:04, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.6638
2022-11-20 15:43:39,325 - mmcls - INFO - Epoch(val) [162][40]	accuracy_top-1: 20.6300, accuracy_top-5: 45.4600
2022-11-20 15:43:50,361 - mmcls - INFO - Epoch [163][100/196]	lr: 1.414e+00, eta: 0:06:53, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7967
2022-11-20 15:44:02,614 - mmcls - INFO - Epoch(val) [163][40]	accuracy_top-1: 31.7900, accuracy_top-5: 62.0100
2022-11-20 15:44:13,642 - mmcls - INFO - Epoch [164][100/196]	lr: 1.547e+00, eta: 0:06:42, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8894
2022-11-20 15:44:25,819 - mmcls - INFO - Epoch(val) [164][40]	accuracy_top-1: 25.5000, accuracy_top-5: 54.8900
2022-11-20 15:44:36,798 - mmcls - INFO - Epoch [165][100/196]	lr: 1.668e+00, eta: 0:06:31, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.9712
2022-11-20 15:44:48,956 - mmcls - INFO - Epoch(val) [165][40]	accuracy_top-1: 17.2900, accuracy_top-5: 39.7500
2022-11-20 15:44:59,976 - mmcls - INFO - Epoch [166][100/196]	lr: 1.773e+00, eta: 0:06:20, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.0688
2022-11-20 15:45:12,190 - mmcls - INFO - Epoch(val) [166][40]	accuracy_top-1: 23.8800, accuracy_top-5: 55.1500
2022-11-20 15:45:23,217 - mmcls - INFO - Epoch [167][100/196]	lr: 1.860e+00, eta: 0:06:09, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1041
2022-11-20 15:45:35,343 - mmcls - INFO - Epoch(val) [167][40]	accuracy_top-1: 22.1800, accuracy_top-5: 48.5900
2022-11-20 15:45:46,315 - mmcls - INFO - Epoch [168][100/196]	lr: 1.928e+00, eta: 0:05:58, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.1836
2022-11-20 15:45:58,576 - mmcls - INFO - Epoch(val) [168][40]	accuracy_top-1: 27.9400, accuracy_top-5: 60.1800
2022-11-20 15:46:09,616 - mmcls - INFO - Epoch [169][100/196]	lr: 1.974e+00, eta: 0:05:47, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2382
2022-11-20 15:46:21,929 - mmcls - INFO - Epoch(val) [169][40]	accuracy_top-1: 8.1000, accuracy_top-5: 22.6000
2022-11-20 15:46:32,947 - mmcls - INFO - Epoch [170][100/196]	lr: 1.997e+00, eta: 0:05:36, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3006
2022-11-20 15:46:41,334 - mmcls - INFO - Saving checkpoint at 170 epochs
2022-11-20 15:46:45,458 - mmcls - INFO - Epoch(val) [170][40]	accuracy_top-1: 12.5800, accuracy_top-5: 37.1700
2022-11-20 15:46:56,478 - mmcls - INFO - Epoch [171][100/196]	lr: 1.999e+00, eta: 0:05:25, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3145
2022-11-20 15:47:08,656 - mmcls - INFO - Epoch(val) [171][40]	accuracy_top-1: 21.6300, accuracy_top-5: 47.8900
2022-11-20 15:47:19,671 - mmcls - INFO - Epoch [172][100/196]	lr: 1.988e+00, eta: 0:05:14, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3347
2022-11-20 15:47:31,828 - mmcls - INFO - Epoch(val) [172][40]	accuracy_top-1: 18.6300, accuracy_top-5: 43.2800
2022-11-20 15:47:42,826 - mmcls - INFO - Epoch [173][100/196]	lr: 1.966e+00, eta: 0:05:03, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.3007
2022-11-20 15:47:54,955 - mmcls - INFO - Epoch(val) [173][40]	accuracy_top-1: 16.4300, accuracy_top-5: 39.9500
2022-11-20 15:48:05,925 - mmcls - INFO - Epoch [174][100/196]	lr: 1.933e+00, eta: 0:04:52, time: 0.109, data_time: 0.022, memory: 2868, loss: 2.3348
2022-11-20 15:48:19,840 - mmcls - INFO - Epoch(val) [174][40]	accuracy_top-1: 15.6500, accuracy_top-5: 38.5600
2022-11-20 15:48:30,934 - mmcls - INFO - Epoch [175][100/196]	lr: 1.891e+00, eta: 0:04:41, time: 0.111, data_time: 0.023, memory: 2868, loss: 2.2140
2022-11-20 15:48:43,094 - mmcls - INFO - Epoch(val) [175][40]	accuracy_top-1: 11.5200, accuracy_top-5: 31.3100
2022-11-20 15:48:54,114 - mmcls - INFO - Epoch [176][100/196]	lr: 1.838e+00, eta: 0:04:30, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.2152
2022-11-20 15:49:06,397 - mmcls - INFO - Epoch(val) [176][40]	accuracy_top-1: 20.4000, accuracy_top-5: 48.1900
2022-11-20 15:49:17,423 - mmcls - INFO - Epoch [177][100/196]	lr: 1.777e+00, eta: 0:04:19, time: 0.110, data_time: 0.022, memory: 2868, loss: 2.1419
2022-11-20 15:49:29,581 - mmcls - INFO - Epoch(val) [177][40]	accuracy_top-1: 24.1500, accuracy_top-5: 51.1200
2022-11-20 15:49:40,640 - mmcls - INFO - Epoch [178][100/196]	lr: 1.707e+00, eta: 0:04:08, time: 0.110, data_time: 0.023, memory: 2868, loss: 2.0556
2022-11-20 15:49:52,816 - mmcls - INFO - Epoch(val) [178][40]	accuracy_top-1: 18.4200, accuracy_top-5: 42.6700
2022-11-20 15:50:03,815 - mmcls - INFO - Epoch [179][100/196]	lr: 1.629e+00, eta: 0:03:57, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.9581
2022-11-20 15:50:16,006 - mmcls - INFO - Epoch(val) [179][40]	accuracy_top-1: 25.2500, accuracy_top-5: 54.8300
2022-11-20 15:50:26,976 - mmcls - INFO - Epoch [180][100/196]	lr: 1.544e+00, eta: 0:03:46, time: 0.109, data_time: 0.022, memory: 2868, loss: 1.9458
2022-11-20 15:50:35,343 - mmcls - INFO - Saving checkpoint at 180 epochs
2022-11-20 15:50:39,515 - mmcls - INFO - Epoch(val) [180][40]	accuracy_top-1: 32.1700, accuracy_top-5: 63.4600
2022-11-20 15:50:50,520 - mmcls - INFO - Epoch [181][100/196]	lr: 1.454e+00, eta: 0:03:34, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.8533
2022-11-20 15:51:02,657 - mmcls - INFO - Epoch(val) [181][40]	accuracy_top-1: 22.4200, accuracy_top-5: 50.8500
2022-11-20 15:51:13,648 - mmcls - INFO - Epoch [182][100/196]	lr: 1.358e+00, eta: 0:03:23, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7739
2022-11-20 15:51:25,801 - mmcls - INFO - Epoch(val) [182][40]	accuracy_top-1: 30.0100, accuracy_top-5: 64.6700
2022-11-20 15:51:36,818 - mmcls - INFO - Epoch [183][100/196]	lr: 1.258e+00, eta: 0:03:12, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.7467
2022-11-20 15:51:49,062 - mmcls - INFO - Epoch(val) [183][40]	accuracy_top-1: 28.0600, accuracy_top-5: 57.0200
2022-11-20 15:52:00,033 - mmcls - INFO - Epoch [184][100/196]	lr: 1.156e+00, eta: 0:03:01, time: 0.109, data_time: 0.021, memory: 2868, loss: 1.6450
2022-11-20 15:52:12,228 - mmcls - INFO - Epoch(val) [184][40]	accuracy_top-1: 28.2600, accuracy_top-5: 58.6300
2022-11-20 15:52:23,246 - mmcls - INFO - Epoch [185][100/196]	lr: 1.052e+00, eta: 0:02:50, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.5446
2022-11-20 15:52:35,447 - mmcls - INFO - Epoch(val) [185][40]	accuracy_top-1: 21.2100, accuracy_top-5: 47.8000
2022-11-20 15:52:46,513 - mmcls - INFO - Epoch [186][100/196]	lr: 9.471e-01, eta: 0:02:39, time: 0.110, data_time: 0.023, memory: 2868, loss: 1.4674
2022-11-20 15:52:58,675 - mmcls - INFO - Epoch(val) [186][40]	accuracy_top-1: 30.5200, accuracy_top-5: 59.2100
2022-11-20 15:53:09,702 - mmcls - INFO - Epoch [187][100/196]	lr: 8.430e-01, eta: 0:02:28, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.3824
2022-11-20 15:53:21,846 - mmcls - INFO - Epoch(val) [187][40]	accuracy_top-1: 37.0400, accuracy_top-5: 68.1000
2022-11-20 15:53:32,886 - mmcls - INFO - Epoch [188][100/196]	lr: 7.407e-01, eta: 0:02:17, time: 0.110, data_time: 0.023, memory: 2868, loss: 1.2698
2022-11-20 15:53:45,066 - mmcls - INFO - Epoch(val) [188][40]	accuracy_top-1: 36.6700, accuracy_top-5: 66.5100
2022-11-20 15:53:56,061 - mmcls - INFO - Epoch [189][100/196]	lr: 6.411e-01, eta: 0:02:06, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.2001
2022-11-20 15:54:08,274 - mmcls - INFO - Epoch(val) [189][40]	accuracy_top-1: 38.3800, accuracy_top-5: 69.6100
2022-11-20 15:54:19,295 - mmcls - INFO - Epoch [190][100/196]	lr: 5.455e-01, eta: 0:01:55, time: 0.110, data_time: 0.022, memory: 2868, loss: 1.0888
2022-11-20 15:54:27,663 - mmcls - INFO - Saving checkpoint at 190 epochs
2022-11-20 15:54:31,937 - mmcls - INFO - Epoch(val) [190][40]	accuracy_top-1: 38.3900, accuracy_top-5: 71.0200
2022-11-20 15:54:43,002 - mmcls - INFO - Epoch [191][100/196]	lr: 4.549e-01, eta: 0:01:44, time: 0.110, data_time: 0.023, memory: 2868, loss: 0.9783
2022-11-20 15:54:55,312 - mmcls - INFO - Epoch(val) [191][40]	accuracy_top-1: 46.3100, accuracy_top-5: 75.9200
2022-11-20 15:55:06,318 - mmcls - INFO - Epoch [192][100/196]	lr: 3.703e-01, eta: 0:01:33, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.8935
2022-11-20 15:55:18,536 - mmcls - INFO - Epoch(val) [192][40]	accuracy_top-1: 48.5300, accuracy_top-5: 78.2800
2022-11-20 15:55:29,542 - mmcls - INFO - Epoch [193][100/196]	lr: 2.925e-01, eta: 0:01:22, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.7761
2022-11-20 15:55:41,785 - mmcls - INFO - Epoch(val) [193][40]	accuracy_top-1: 57.2600, accuracy_top-5: 84.2300
2022-11-20 15:55:52,764 - mmcls - INFO - Epoch [194][100/196]	lr: 2.225e-01, eta: 0:01:11, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.6835
2022-11-20 15:56:04,979 - mmcls - INFO - Epoch(val) [194][40]	accuracy_top-1: 56.1200, accuracy_top-5: 83.4100
2022-11-20 15:56:15,976 - mmcls - INFO - Epoch [195][100/196]	lr: 1.610e-01, eta: 0:01:00, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.5768
2022-11-20 15:56:28,168 - mmcls - INFO - Epoch(val) [195][40]	accuracy_top-1: 60.7500, accuracy_top-5: 86.2000
2022-11-20 15:56:39,167 - mmcls - INFO - Epoch [196][100/196]	lr: 1.088e-01, eta: 0:00:49, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4801
2022-11-20 15:56:51,352 - mmcls - INFO - Epoch(val) [196][40]	accuracy_top-1: 67.4400, accuracy_top-5: 90.2400
2022-11-20 15:57:02,414 - mmcls - INFO - Epoch [197][100/196]	lr: 6.624e-02, eta: 0:00:38, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.4012
2022-11-20 15:57:14,584 - mmcls - INFO - Epoch(val) [197][40]	accuracy_top-1: 69.7200, accuracy_top-5: 91.8700
2022-11-20 15:57:25,623 - mmcls - INFO - Epoch [198][100/196]	lr: 3.395e-02, eta: 0:00:27, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.3318
2022-11-20 15:57:37,770 - mmcls - INFO - Epoch(val) [198][40]	accuracy_top-1: 71.4700, accuracy_top-5: 93.0400
2022-11-20 15:57:48,807 - mmcls - INFO - Epoch [199][100/196]	lr: 1.224e-02, eta: 0:00:16, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.2935
2022-11-20 15:58:01,046 - mmcls - INFO - Epoch(val) [199][40]	accuracy_top-1: 72.1700, accuracy_top-5: 93.0900
2022-11-20 15:58:12,082 - mmcls - INFO - Epoch [200][100/196]	lr: 1.353e-03, eta: 0:00:05, time: 0.110, data_time: 0.022, memory: 2868, loss: 0.2812
2022-11-20 15:58:20,466 - mmcls - INFO - Saving checkpoint at 200 epochs
2022-11-20 15:58:24,867 - mmcls - INFO - Epoch(val) [200][40]	accuracy_top-1: 72.2500, accuracy_top-5: 93.3000
