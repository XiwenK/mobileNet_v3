2022-11-21 12:04:04,438 - mmcls - INFO - Environment info:
------------------------------------------------------------
sys.platform: linux
Python: 3.8.13 (default, Oct 21 2022, 23:50:54) [GCC 11.2.0]
CUDA available: True
GPU 0: NVIDIA GeForce RTX 2080 Ti
CUDA_HOME: /home/MSAI/szhang064/miniconda3/envs/mmdl2
NVCC: Cuda compilation tools, release 11.7, V11.7.99
GCC: gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-44)
PyTorch: 1.13.0
PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201402
  - Intel(R) oneAPI Math Kernel Library Version 2021.4-Product Build 20210904 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v2.6.0 (Git Hash 52b5f107dd9cf10910aaa19cb47f3abf9b349815)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.7
  - NVCC architecture flags: -gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_61,code=sm_61;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=compute_37
  - CuDNN 8.5
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.7, CUDNN_VERSION=8.5.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -fabi-version=11 -Wno-deprecated -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -fopenmp -DNDEBUG -DUSE_KINETO -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -DEDGE_PROFILER_USE_KINETO -O2 -fPIC -Wno-narrowing -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wunused-local-typedefs -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-error=deprecated-declarations -Wno-stringop-overflow -Wno-psabi -Wno-error=pedantic -Wno-error=redundant-decls -Wno-error=old-style-cast -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Werror=cast-function-type -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=1.13.0, USE_CUDA=ON, USE_CUDNN=ON, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=ON, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, 

TorchVision: 0.14.0
OpenCV: 4.6.0
MMCV: 1.7.0
MMCV Compiler: GCC 9.3
MMCV CUDA Compiler: 11.7
MMClassification: 0.24.1+8f650b5
------------------------------------------------------------

2022-11-21 12:04:04,438 - mmcls - INFO - Distributed training: True
2022-11-21 12:04:04,550 - mmcls - INFO - Config:
model = dict(
    type='ImageClassifier',
    backbone=dict(type='MobileNetV3Cifar', arch='large'),
    neck=dict(type='GlobalAveragePooling'),
    head=dict(
        type='StackedLinearClsHead',
        num_classes=10,
        in_channels=960,
        mid_channels=[1280],
        act_cfg=dict(type='HSwish'),
        loss=dict(type='CrossEntropyLoss', loss_weight=1.0),
        topk=(1, 5)))
dataset_type = 'CIFAR10'
img_norm_cfg = dict(
    mean=[125.307, 122.961, 113.8575],
    std=[51.5865, 50.847, 51.255],
    to_rgb=False)
train_pipeline = [
    dict(type='RandomCrop', size=32, padding=4),
    dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='ToTensor', keys=['gt_label']),
    dict(type='Collect', keys=['img', 'gt_label'])
]
test_pipeline = [
    dict(
        type='Normalize',
        mean=[125.307, 122.961, 113.8575],
        std=[51.5865, 50.847, 51.255],
        to_rgb=False),
    dict(type='ImageToTensor', keys=['img']),
    dict(type='Collect', keys=['img'])
]
data = dict(
    samples_per_gpu=256,
    workers_per_gpu=2,
    train=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(type='RandomCrop', size=32, padding=4),
            dict(type='RandomFlip', flip_prob=0.5, direction='horizontal'),
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='ToTensor', keys=['gt_label']),
            dict(type='Collect', keys=['img', 'gt_label'])
        ]),
    val=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True),
    test=dict(
        type='CIFAR10',
        data_prefix='data/cifar10',
        pipeline=[
            dict(
                type='Normalize',
                mean=[125.307, 122.961, 113.8575],
                std=[51.5865, 50.847, 51.255],
                to_rgb=False),
            dict(type='ImageToTensor', keys=['img']),
            dict(type='Collect', keys=['img'])
        ],
        test_mode=True))
optimizer = dict(type='SGD', lr=0.2, momentum=0.9, weight_decay=0.0001)
optimizer_config = dict(grad_clip=None)
runner = dict(type='EpochBasedRunner', max_epochs=200)
checkpoint_config = dict(interval=10, max_keep_ckpts=1)
log_config = dict(
    interval=100,
    hooks=[dict(type='TextLoggerHook'),
           dict(type='TensorboardLoggerHook')])
dist_params = dict(backend='nccl')
log_level = 'INFO'
load_from = None
resume_from = None
workflow = [('train', 1)]
lr_config = dict(
    policy='poly',
    power=0.7,
    min_lr=0.0001,
    by_epoch=False,
    warmup='exp',
    warmup_ratio=0.1,
    warmup_iters=5,
    warmup_by_epoch=True)
work_dir = './work_dirs/mobilenet_v3_large_b128_cifar10'
gpu_ids = range(0, 1)

2022-11-21 12:04:04,551 - mmcls - INFO - Set random seed to 1378641914, deterministic: False
2022-11-21 12:04:04,639 - mmcls - INFO - initialize MobileNetV3Cifar with init_cfg [{'type': 'Kaiming', 'layer': ['Conv2d'], 'nonlinearity': 'leaky_relu'}, {'type': 'Normal', 'layer': ['Linear'], 'std': 0.01}, {'type': 'Constant', 'layer': ['BatchNorm2d'], 'val': 1}]
Name of parameter - Initialization information

backbone.layer0.conv.weight - torch.Size([16, 3, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer0.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer0.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.depthwise_conv.conv.weight - torch.Size([16, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer1.depthwise_conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.depthwise_conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.linear_conv.conv.weight - torch.Size([16, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer1.linear_conv.bn.weight - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer1.linear_conv.bn.bias - torch.Size([16]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.expand_conv.conv.weight - torch.Size([64, 16, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer2.expand_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.expand_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.depthwise_conv.conv.weight - torch.Size([64, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer2.depthwise_conv.bn.weight - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.depthwise_conv.bn.bias - torch.Size([64]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.linear_conv.conv.weight - torch.Size([24, 64, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer2.linear_conv.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer2.linear_conv.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer3.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.depthwise_conv.conv.weight - torch.Size([72, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer3.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.linear_conv.conv.weight - torch.Size([24, 72, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer3.linear_conv.bn.weight - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer3.linear_conv.bn.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.expand_conv.conv.weight - torch.Size([72, 24, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.expand_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.expand_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.depthwise_conv.conv.weight - torch.Size([72, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.depthwise_conv.bn.weight - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.depthwise_conv.bn.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.se.conv1.conv.weight - torch.Size([24, 72, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.se.conv1.conv.bias - torch.Size([24]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.se.conv2.conv.weight - torch.Size([72, 24, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.se.conv2.conv.bias - torch.Size([72]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.linear_conv.conv.weight - torch.Size([40, 72, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer4.linear_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer4.linear_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.expand_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.expand_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.depthwise_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.depthwise_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.se.conv1.conv.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.se.conv2.conv.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.linear_conv.conv.weight - torch.Size([40, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer5.linear_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer5.linear_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.expand_conv.conv.weight - torch.Size([120, 40, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.expand_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.expand_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.depthwise_conv.conv.weight - torch.Size([120, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.depthwise_conv.bn.weight - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.depthwise_conv.bn.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.se.conv1.conv.weight - torch.Size([32, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.se.conv1.conv.bias - torch.Size([32]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.se.conv2.conv.weight - torch.Size([120, 32, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.se.conv2.conv.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.linear_conv.conv.weight - torch.Size([40, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer6.linear_conv.bn.weight - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer6.linear_conv.bn.bias - torch.Size([40]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.expand_conv.conv.weight - torch.Size([240, 40, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer7.expand_conv.bn.weight - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.expand_conv.bn.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.depthwise_conv.conv.weight - torch.Size([240, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer7.depthwise_conv.bn.weight - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.depthwise_conv.bn.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.linear_conv.conv.weight - torch.Size([80, 240, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer7.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer7.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.expand_conv.conv.weight - torch.Size([200, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer8.expand_conv.bn.weight - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.expand_conv.bn.bias - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.depthwise_conv.conv.weight - torch.Size([200, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer8.depthwise_conv.bn.weight - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.depthwise_conv.bn.bias - torch.Size([200]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.linear_conv.conv.weight - torch.Size([80, 200, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer8.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer8.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.expand_conv.conv.weight - torch.Size([184, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer9.expand_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.expand_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.depthwise_conv.conv.weight - torch.Size([184, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer9.depthwise_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.depthwise_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.linear_conv.conv.weight - torch.Size([80, 184, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer9.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer9.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.expand_conv.conv.weight - torch.Size([184, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer10.expand_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.expand_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.depthwise_conv.conv.weight - torch.Size([184, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer10.depthwise_conv.bn.weight - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.depthwise_conv.bn.bias - torch.Size([184]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.linear_conv.conv.weight - torch.Size([80, 184, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer10.linear_conv.bn.weight - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer10.linear_conv.bn.bias - torch.Size([80]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.expand_conv.conv.weight - torch.Size([480, 80, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.expand_conv.bn.weight - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.expand_conv.bn.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.depthwise_conv.conv.weight - torch.Size([480, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.depthwise_conv.bn.weight - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.depthwise_conv.bn.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.se.conv1.conv.weight - torch.Size([120, 480, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.se.conv1.conv.bias - torch.Size([120]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.se.conv2.conv.weight - torch.Size([480, 120, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.se.conv2.conv.bias - torch.Size([480]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.linear_conv.conv.weight - torch.Size([112, 480, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer11.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer11.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.depthwise_conv.conv.weight - torch.Size([672, 1, 3, 3]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.se.conv1.conv.weight - torch.Size([168, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.se.conv1.conv.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.se.conv2.conv.weight - torch.Size([672, 168, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.se.conv2.conv.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.linear_conv.conv.weight - torch.Size([112, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer12.linear_conv.bn.weight - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer12.linear_conv.bn.bias - torch.Size([112]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.expand_conv.conv.weight - torch.Size([672, 112, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.expand_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.expand_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.depthwise_conv.conv.weight - torch.Size([672, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.depthwise_conv.bn.weight - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.depthwise_conv.bn.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.se.conv1.conv.weight - torch.Size([168, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.se.conv1.conv.bias - torch.Size([168]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.se.conv2.conv.weight - torch.Size([672, 168, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.se.conv2.conv.bias - torch.Size([672]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.linear_conv.conv.weight - torch.Size([160, 672, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer13.linear_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer13.linear_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.expand_conv.conv.weight - torch.Size([960, 160, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.expand_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.expand_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.depthwise_conv.conv.weight - torch.Size([960, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.depthwise_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.depthwise_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.se.conv1.conv.weight - torch.Size([240, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.se.conv1.conv.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.se.conv2.conv.weight - torch.Size([960, 240, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.se.conv2.conv.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.linear_conv.conv.weight - torch.Size([160, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer14.linear_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer14.linear_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.expand_conv.conv.weight - torch.Size([960, 160, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.expand_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.expand_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.depthwise_conv.conv.weight - torch.Size([960, 1, 5, 5]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.depthwise_conv.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.depthwise_conv.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.se.conv1.conv.weight - torch.Size([240, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.se.conv1.conv.bias - torch.Size([240]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.se.conv2.conv.weight - torch.Size([960, 240, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.se.conv2.conv.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.linear_conv.conv.weight - torch.Size([160, 960, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer15.linear_conv.bn.weight - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer15.linear_conv.bn.bias - torch.Size([160]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer16.conv.weight - torch.Size([960, 160, 1, 1]): 
Initialized by user-defined `init_weights` in ConvModule  

backbone.layer16.bn.weight - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

backbone.layer16.bn.bias - torch.Size([960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.0.fc.weight - torch.Size([1280, 960]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.0.fc.bias - torch.Size([1280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.1.fc.weight - torch.Size([10, 1280]): 
The value is the same before and after calling `init_weights` of ImageClassifier  

head.layers.1.fc.bias - torch.Size([10]): 
The value is the same before and after calling `init_weights` of ImageClassifier  
2022-11-21 12:04:07,927 - mmcls - INFO - Start running, host: szhang064@SCSEGPU-TC1-08, work_dir: /home/MSAI/szhang064/MobileNet/mmdl/work_dirs/mobilenet_v3_large_b128_cifar10
2022-11-21 12:04:07,927 - mmcls - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_train_iter:
(VERY_HIGH   ) PolyLrUpdaterHook                  
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
 -------------------- 
after_train_iter:
(ABOVE_NORMAL) DistOptimizerHook                  
(NORMAL      ) CheckpointHook                     
(LOW         ) IterTimerHook                      
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_train_epoch:
(NORMAL      ) CheckpointHook                     
(LOW         ) DistEvalHook                       
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_epoch:
(NORMAL      ) DistSamplerSeedHook                
(LOW         ) IterTimerHook                      
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
before_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_iter:
(LOW         ) IterTimerHook                      
 -------------------- 
after_val_epoch:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
after_run:
(VERY_LOW    ) TextLoggerHook                     
(VERY_LOW    ) TensorboardLoggerHook              
 -------------------- 
2022-11-21 12:04:07,928 - mmcls - INFO - workflow: [('train', 1)], max: 200 epochs
2022-11-21 12:04:07,928 - mmcls - INFO - Checkpoints will be saved to /home/MSAI/szhang064/MobileNet/mmdl/work_dirs/mobilenet_v3_large_b128_cifar10 by HardDiskBackend.
2022-11-21 12:04:22,353 - mmcls - INFO - Epoch [1][100/196]	lr: 2.519e-02, eta: 1:31:17, time: 0.140, data_time: 0.033, memory: 2867, loss: 1.9239
2022-11-21 12:04:34,834 - mmcls - INFO - Epoch(val) [1][40]	accuracy_top-1: 10.0000, accuracy_top-5: 50.0000
2022-11-21 12:04:45,728 - mmcls - INFO - Epoch [2][100/196]	lr: 3.979e-02, eta: 0:54:29, time: 0.109, data_time: 0.022, memory: 2867, loss: 1.2497
2022-11-21 12:04:57,685 - mmcls - INFO - Epoch(val) [2][40]	accuracy_top-1: 11.3500, accuracy_top-5: 54.0300
2022-11-21 12:05:08,580 - mmcls - INFO - Epoch [3][100/196]	lr: 6.284e-02, eta: 0:46:52, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.9575
2022-11-21 12:05:20,538 - mmcls - INFO - Epoch(val) [3][40]	accuracy_top-1: 39.6200, accuracy_top-5: 88.2500
2022-11-21 12:05:31,506 - mmcls - INFO - Epoch [4][100/196]	lr: 9.924e-02, eta: 0:43:33, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.7737
2022-11-21 12:05:43,483 - mmcls - INFO - Epoch(val) [4][40]	accuracy_top-1: 48.8200, accuracy_top-5: 87.3700
2022-11-21 12:05:54,418 - mmcls - INFO - Epoch [5][100/196]	lr: 1.567e-01, eta: 0:41:36, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.6990
2022-11-21 12:06:06,389 - mmcls - INFO - Epoch(val) [5][40]	accuracy_top-1: 28.7800, accuracy_top-5: 83.5400
2022-11-21 12:06:17,335 - mmcls - INFO - Epoch [6][100/196]	lr: 1.961e-01, eta: 0:40:18, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.6332
2022-11-21 12:06:29,431 - mmcls - INFO - Epoch(val) [6][40]	accuracy_top-1: 67.5200, accuracy_top-5: 96.4000
2022-11-21 12:06:40,378 - mmcls - INFO - Epoch [7][100/196]	lr: 1.954e-01, eta: 0:39:21, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.5526
2022-11-21 12:06:52,326 - mmcls - INFO - Epoch(val) [7][40]	accuracy_top-1: 76.7600, accuracy_top-5: 98.7300
2022-11-21 12:07:03,270 - mmcls - INFO - Epoch [8][100/196]	lr: 1.947e-01, eta: 0:38:36, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.5009
2022-11-21 12:07:15,251 - mmcls - INFO - Epoch(val) [8][40]	accuracy_top-1: 69.8000, accuracy_top-5: 98.1300
2022-11-21 12:07:26,227 - mmcls - INFO - Epoch [9][100/196]	lr: 1.940e-01, eta: 0:37:59, time: 0.110, data_time: 0.022, memory: 2867, loss: 0.4531
2022-11-21 12:07:38,271 - mmcls - INFO - Epoch(val) [9][40]	accuracy_top-1: 79.1200, accuracy_top-5: 98.8600
2022-11-21 12:07:49,200 - mmcls - INFO - Epoch [10][100/196]	lr: 1.933e-01, eta: 0:37:28, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.4124
2022-11-21 12:07:57,513 - mmcls - INFO - Saving checkpoint at 10 epochs
2022-11-21 12:08:01,603 - mmcls - INFO - Epoch(val) [10][40]	accuracy_top-1: 77.2200, accuracy_top-5: 98.9300
2022-11-21 12:08:12,545 - mmcls - INFO - Epoch [11][100/196]	lr: 1.926e-01, eta: 0:37:00, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.3866
2022-11-21 12:08:24,505 - mmcls - INFO - Epoch(val) [11][40]	accuracy_top-1: 80.8700, accuracy_top-5: 99.0000
2022-11-21 12:08:35,438 - mmcls - INFO - Epoch [12][100/196]	lr: 1.919e-01, eta: 0:36:35, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.3654
2022-11-21 12:08:47,457 - mmcls - INFO - Epoch(val) [12][40]	accuracy_top-1: 77.7300, accuracy_top-5: 97.2100
2022-11-21 12:08:58,411 - mmcls - INFO - Epoch [13][100/196]	lr: 1.912e-01, eta: 0:36:12, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.3588
2022-11-21 12:09:10,355 - mmcls - INFO - Epoch(val) [13][40]	accuracy_top-1: 75.5300, accuracy_top-5: 98.7700
2022-11-21 12:09:21,270 - mmcls - INFO - Epoch [14][100/196]	lr: 1.905e-01, eta: 0:35:51, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.3370
2022-11-21 12:09:33,286 - mmcls - INFO - Epoch(val) [14][40]	accuracy_top-1: 78.5900, accuracy_top-5: 98.9800
2022-11-21 12:09:44,291 - mmcls - INFO - Epoch [15][100/196]	lr: 1.897e-01, eta: 0:35:32, time: 0.110, data_time: 0.023, memory: 2867, loss: 0.3290
2022-11-21 12:09:56,295 - mmcls - INFO - Epoch(val) [15][40]	accuracy_top-1: 83.5000, accuracy_top-5: 99.4400
2022-11-21 12:10:07,227 - mmcls - INFO - Epoch [16][100/196]	lr: 1.890e-01, eta: 0:35:14, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.3199
2022-11-21 12:10:19,164 - mmcls - INFO - Epoch(val) [16][40]	accuracy_top-1: 81.1000, accuracy_top-5: 99.1400
2022-11-21 12:10:30,054 - mmcls - INFO - Epoch [17][100/196]	lr: 1.883e-01, eta: 0:34:56, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.3044
2022-11-21 12:10:43,402 - mmcls - INFO - Epoch(val) [17][40]	accuracy_top-1: 81.4600, accuracy_top-5: 99.0800
2022-11-21 12:10:54,278 - mmcls - INFO - Epoch [18][100/196]	lr: 1.876e-01, eta: 0:34:38, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2865
2022-11-21 12:11:05,996 - mmcls - INFO - Epoch(val) [18][40]	accuracy_top-1: 79.2500, accuracy_top-5: 99.0100
2022-11-21 12:11:16,853 - mmcls - INFO - Epoch [19][100/196]	lr: 1.869e-01, eta: 0:34:22, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.2846
2022-11-21 12:11:28,690 - mmcls - INFO - Epoch(val) [19][40]	accuracy_top-1: 84.5000, accuracy_top-5: 99.4100
2022-11-21 12:11:39,503 - mmcls - INFO - Epoch [20][100/196]	lr: 1.861e-01, eta: 0:34:05, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.2825
2022-11-21 12:11:47,764 - mmcls - INFO - Saving checkpoint at 20 epochs
2022-11-21 12:11:51,849 - mmcls - INFO - Epoch(val) [20][40]	accuracy_top-1: 80.0600, accuracy_top-5: 99.0300
2022-11-21 12:12:02,798 - mmcls - INFO - Epoch [21][100/196]	lr: 1.854e-01, eta: 0:33:50, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2764
2022-11-21 12:12:14,706 - mmcls - INFO - Epoch(val) [21][40]	accuracy_top-1: 81.7900, accuracy_top-5: 99.1200
2022-11-21 12:12:25,604 - mmcls - INFO - Epoch [22][100/196]	lr: 1.847e-01, eta: 0:33:35, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2686
2022-11-21 12:12:37,519 - mmcls - INFO - Epoch(val) [22][40]	accuracy_top-1: 86.4100, accuracy_top-5: 99.5300
2022-11-21 12:12:48,494 - mmcls - INFO - Epoch [23][100/196]	lr: 1.840e-01, eta: 0:33:21, time: 0.110, data_time: 0.023, memory: 2867, loss: 0.2676
2022-11-21 12:13:00,505 - mmcls - INFO - Epoch(val) [23][40]	accuracy_top-1: 85.1100, accuracy_top-5: 99.4100
2022-11-21 12:13:11,373 - mmcls - INFO - Epoch [24][100/196]	lr: 1.832e-01, eta: 0:33:06, time: 0.108, data_time: 0.021, memory: 2867, loss: 0.2483
2022-11-21 12:13:23,232 - mmcls - INFO - Epoch(val) [24][40]	accuracy_top-1: 82.9200, accuracy_top-5: 98.7500
2022-11-21 12:13:34,139 - mmcls - INFO - Epoch [25][100/196]	lr: 1.825e-01, eta: 0:32:53, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2527
2022-11-21 12:13:46,020 - mmcls - INFO - Epoch(val) [25][40]	accuracy_top-1: 85.4800, accuracy_top-5: 99.5000
2022-11-21 12:13:56,963 - mmcls - INFO - Epoch [26][100/196]	lr: 1.818e-01, eta: 0:32:39, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.2483
2022-11-21 12:14:08,865 - mmcls - INFO - Epoch(val) [26][40]	accuracy_top-1: 85.5600, accuracy_top-5: 99.4000
2022-11-21 12:14:19,738 - mmcls - INFO - Epoch [27][100/196]	lr: 1.811e-01, eta: 0:32:25, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2490
2022-11-21 12:14:31,645 - mmcls - INFO - Epoch(val) [27][40]	accuracy_top-1: 85.5000, accuracy_top-5: 99.4800
2022-11-21 12:14:42,547 - mmcls - INFO - Epoch [28][100/196]	lr: 1.803e-01, eta: 0:32:12, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2347
2022-11-21 12:14:54,419 - mmcls - INFO - Epoch(val) [28][40]	accuracy_top-1: 83.6000, accuracy_top-5: 99.2300
2022-11-21 12:15:05,308 - mmcls - INFO - Epoch [29][100/196]	lr: 1.796e-01, eta: 0:31:59, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2348
2022-11-21 12:15:17,189 - mmcls - INFO - Epoch(val) [29][40]	accuracy_top-1: 87.0200, accuracy_top-5: 99.4400
2022-11-21 12:15:28,072 - mmcls - INFO - Epoch [30][100/196]	lr: 1.789e-01, eta: 0:31:46, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2229
2022-11-21 12:15:36,368 - mmcls - INFO - Saving checkpoint at 30 epochs
2022-11-21 12:15:40,373 - mmcls - INFO - Epoch(val) [30][40]	accuracy_top-1: 84.5900, accuracy_top-5: 99.3300
2022-11-21 12:15:51,325 - mmcls - INFO - Epoch [31][100/196]	lr: 1.781e-01, eta: 0:31:33, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.2212
2022-11-21 12:16:03,281 - mmcls - INFO - Epoch(val) [31][40]	accuracy_top-1: 80.5300, accuracy_top-5: 99.1400
2022-11-21 12:16:14,187 - mmcls - INFO - Epoch [32][100/196]	lr: 1.774e-01, eta: 0:31:20, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2249
2022-11-21 12:16:26,100 - mmcls - INFO - Epoch(val) [32][40]	accuracy_top-1: 85.0100, accuracy_top-5: 99.3000
2022-11-21 12:16:36,995 - mmcls - INFO - Epoch [33][100/196]	lr: 1.767e-01, eta: 0:31:08, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2152
2022-11-21 12:16:48,865 - mmcls - INFO - Epoch(val) [33][40]	accuracy_top-1: 83.3400, accuracy_top-5: 99.1700
2022-11-21 12:16:59,776 - mmcls - INFO - Epoch [34][100/196]	lr: 1.759e-01, eta: 0:30:55, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2185
2022-11-21 12:17:11,696 - mmcls - INFO - Epoch(val) [34][40]	accuracy_top-1: 85.4100, accuracy_top-5: 99.3200
2022-11-21 12:17:22,557 - mmcls - INFO - Epoch [35][100/196]	lr: 1.752e-01, eta: 0:30:43, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.2101
2022-11-21 12:17:34,457 - mmcls - INFO - Epoch(val) [35][40]	accuracy_top-1: 84.8000, accuracy_top-5: 99.1900
2022-11-21 12:17:45,328 - mmcls - INFO - Epoch [36][100/196]	lr: 1.744e-01, eta: 0:30:30, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.2141
2022-11-21 12:17:57,229 - mmcls - INFO - Epoch(val) [36][40]	accuracy_top-1: 87.5800, accuracy_top-5: 99.5500
2022-11-21 12:18:08,135 - mmcls - INFO - Epoch [37][100/196]	lr: 1.737e-01, eta: 0:30:18, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2007
2022-11-21 12:18:20,012 - mmcls - INFO - Epoch(val) [37][40]	accuracy_top-1: 86.2700, accuracy_top-5: 99.4400
2022-11-21 12:18:30,879 - mmcls - INFO - Epoch [38][100/196]	lr: 1.730e-01, eta: 0:30:06, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.2028
2022-11-21 12:18:42,871 - mmcls - INFO - Epoch(val) [38][40]	accuracy_top-1: 84.6500, accuracy_top-5: 99.0900
2022-11-21 12:18:53,811 - mmcls - INFO - Epoch [39][100/196]	lr: 1.722e-01, eta: 0:29:54, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.2035
2022-11-21 12:19:05,754 - mmcls - INFO - Epoch(val) [39][40]	accuracy_top-1: 81.8900, accuracy_top-5: 98.8700
2022-11-21 12:19:16,693 - mmcls - INFO - Epoch [40][100/196]	lr: 1.715e-01, eta: 0:29:42, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.2114
2022-11-21 12:19:24,983 - mmcls - INFO - Saving checkpoint at 40 epochs
2022-11-21 12:19:28,955 - mmcls - INFO - Epoch(val) [40][40]	accuracy_top-1: 86.6900, accuracy_top-5: 99.5400
2022-11-21 12:19:39,878 - mmcls - INFO - Epoch [41][100/196]	lr: 1.707e-01, eta: 0:29:30, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1929
2022-11-21 12:19:51,841 - mmcls - INFO - Epoch(val) [41][40]	accuracy_top-1: 85.8900, accuracy_top-5: 99.3900
2022-11-21 12:20:02,730 - mmcls - INFO - Epoch [42][100/196]	lr: 1.700e-01, eta: 0:29:18, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1972
2022-11-21 12:20:14,648 - mmcls - INFO - Epoch(val) [42][40]	accuracy_top-1: 83.9200, accuracy_top-5: 99.5600
2022-11-21 12:20:25,586 - mmcls - INFO - Epoch [43][100/196]	lr: 1.692e-01, eta: 0:29:06, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1934
2022-11-21 12:20:37,566 - mmcls - INFO - Epoch(val) [43][40]	accuracy_top-1: 86.0800, accuracy_top-5: 99.2800
2022-11-21 12:20:48,497 - mmcls - INFO - Epoch [44][100/196]	lr: 1.685e-01, eta: 0:28:54, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1891
2022-11-21 12:21:00,364 - mmcls - INFO - Epoch(val) [44][40]	accuracy_top-1: 86.3000, accuracy_top-5: 99.4300
2022-11-21 12:21:11,254 - mmcls - INFO - Epoch [45][100/196]	lr: 1.677e-01, eta: 0:28:42, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1841
2022-11-21 12:21:23,153 - mmcls - INFO - Epoch(val) [45][40]	accuracy_top-1: 85.8700, accuracy_top-5: 99.5400
2022-11-21 12:21:34,025 - mmcls - INFO - Epoch [46][100/196]	lr: 1.670e-01, eta: 0:28:31, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.1853
2022-11-21 12:21:45,925 - mmcls - INFO - Epoch(val) [46][40]	accuracy_top-1: 86.3300, accuracy_top-5: 99.3700
2022-11-21 12:21:56,862 - mmcls - INFO - Epoch [47][100/196]	lr: 1.662e-01, eta: 0:28:19, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1803
2022-11-21 12:22:08,735 - mmcls - INFO - Epoch(val) [47][40]	accuracy_top-1: 86.0200, accuracy_top-5: 99.4500
2022-11-21 12:22:19,710 - mmcls - INFO - Epoch [48][100/196]	lr: 1.654e-01, eta: 0:28:07, time: 0.110, data_time: 0.023, memory: 2867, loss: 0.1798
2022-11-21 12:22:31,622 - mmcls - INFO - Epoch(val) [48][40]	accuracy_top-1: 85.0200, accuracy_top-5: 98.8300
2022-11-21 12:22:42,538 - mmcls - INFO - Epoch [49][100/196]	lr: 1.647e-01, eta: 0:27:56, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1751
2022-11-21 12:22:54,428 - mmcls - INFO - Epoch(val) [49][40]	accuracy_top-1: 85.9800, accuracy_top-5: 99.3800
2022-11-21 12:23:05,321 - mmcls - INFO - Epoch [50][100/196]	lr: 1.639e-01, eta: 0:27:44, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1792
2022-11-21 12:23:13,652 - mmcls - INFO - Saving checkpoint at 50 epochs
2022-11-21 12:23:17,627 - mmcls - INFO - Epoch(val) [50][40]	accuracy_top-1: 85.2600, accuracy_top-5: 99.5600
2022-11-21 12:23:28,592 - mmcls - INFO - Epoch [51][100/196]	lr: 1.632e-01, eta: 0:27:33, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1723
2022-11-21 12:23:40,458 - mmcls - INFO - Epoch(val) [51][40]	accuracy_top-1: 87.8200, accuracy_top-5: 99.6700
2022-11-21 12:23:51,350 - mmcls - INFO - Epoch [52][100/196]	lr: 1.624e-01, eta: 0:27:21, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1782
2022-11-21 12:24:03,321 - mmcls - INFO - Epoch(val) [52][40]	accuracy_top-1: 88.4600, accuracy_top-5: 99.5900
2022-11-21 12:24:14,254 - mmcls - INFO - Epoch [53][100/196]	lr: 1.616e-01, eta: 0:27:10, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1750
2022-11-21 12:24:26,467 - mmcls - INFO - Epoch(val) [53][40]	accuracy_top-1: 86.9200, accuracy_top-5: 99.2800
2022-11-21 12:24:37,438 - mmcls - INFO - Epoch [54][100/196]	lr: 1.609e-01, eta: 0:26:58, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1711
2022-11-21 12:24:50,042 - mmcls - INFO - Epoch(val) [54][40]	accuracy_top-1: 89.0200, accuracy_top-5: 99.6800
2022-11-21 12:25:00,923 - mmcls - INFO - Epoch [55][100/196]	lr: 1.601e-01, eta: 0:26:47, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1780
2022-11-21 12:25:12,794 - mmcls - INFO - Epoch(val) [55][40]	accuracy_top-1: 86.6000, accuracy_top-5: 99.4400
2022-11-21 12:25:23,747 - mmcls - INFO - Epoch [56][100/196]	lr: 1.593e-01, eta: 0:26:35, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1627
2022-11-21 12:25:35,793 - mmcls - INFO - Epoch(val) [56][40]	accuracy_top-1: 87.0800, accuracy_top-5: 99.6300
2022-11-21 12:25:46,693 - mmcls - INFO - Epoch [57][100/196]	lr: 1.585e-01, eta: 0:26:24, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1691
2022-11-21 12:25:58,626 - mmcls - INFO - Epoch(val) [57][40]	accuracy_top-1: 87.6000, accuracy_top-5: 99.4400
2022-11-21 12:26:09,544 - mmcls - INFO - Epoch [58][100/196]	lr: 1.578e-01, eta: 0:26:12, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1696
2022-11-21 12:26:21,554 - mmcls - INFO - Epoch(val) [58][40]	accuracy_top-1: 87.0500, accuracy_top-5: 99.2800
2022-11-21 12:26:32,482 - mmcls - INFO - Epoch [59][100/196]	lr: 1.570e-01, eta: 0:26:01, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1593
2022-11-21 12:26:44,429 - mmcls - INFO - Epoch(val) [59][40]	accuracy_top-1: 83.9700, accuracy_top-5: 99.3100
2022-11-21 12:26:55,332 - mmcls - INFO - Epoch [60][100/196]	lr: 1.562e-01, eta: 0:25:50, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1546
2022-11-21 12:27:03,620 - mmcls - INFO - Saving checkpoint at 60 epochs
2022-11-21 12:27:07,571 - mmcls - INFO - Epoch(val) [60][40]	accuracy_top-1: 88.6800, accuracy_top-5: 99.4700
2022-11-21 12:27:18,442 - mmcls - INFO - Epoch [61][100/196]	lr: 1.554e-01, eta: 0:25:38, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.1670
2022-11-21 12:27:30,287 - mmcls - INFO - Epoch(val) [61][40]	accuracy_top-1: 87.7400, accuracy_top-5: 99.6000
2022-11-21 12:27:41,180 - mmcls - INFO - Epoch [62][100/196]	lr: 1.547e-01, eta: 0:25:27, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1517
2022-11-21 12:27:53,085 - mmcls - INFO - Epoch(val) [62][40]	accuracy_top-1: 86.5300, accuracy_top-5: 99.3600
2022-11-21 12:28:04,013 - mmcls - INFO - Epoch [63][100/196]	lr: 1.539e-01, eta: 0:25:16, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1504
2022-11-21 12:28:15,861 - mmcls - INFO - Epoch(val) [63][40]	accuracy_top-1: 84.9500, accuracy_top-5: 99.1200
2022-11-21 12:28:26,763 - mmcls - INFO - Epoch [64][100/196]	lr: 1.531e-01, eta: 0:25:04, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1478
2022-11-21 12:28:38,671 - mmcls - INFO - Epoch(val) [64][40]	accuracy_top-1: 86.7800, accuracy_top-5: 99.6000
2022-11-21 12:28:49,638 - mmcls - INFO - Epoch [65][100/196]	lr: 1.523e-01, eta: 0:24:53, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1491
2022-11-21 12:29:01,496 - mmcls - INFO - Epoch(val) [65][40]	accuracy_top-1: 85.3300, accuracy_top-5: 99.2900
2022-11-21 12:29:12,376 - mmcls - INFO - Epoch [66][100/196]	lr: 1.515e-01, eta: 0:24:42, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1522
2022-11-21 12:29:24,261 - mmcls - INFO - Epoch(val) [66][40]	accuracy_top-1: 88.2800, accuracy_top-5: 99.5900
2022-11-21 12:29:35,173 - mmcls - INFO - Epoch [67][100/196]	lr: 1.507e-01, eta: 0:24:30, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1499
2022-11-21 12:29:47,167 - mmcls - INFO - Epoch(val) [67][40]	accuracy_top-1: 89.6700, accuracy_top-5: 99.6200
2022-11-21 12:29:58,113 - mmcls - INFO - Epoch [68][100/196]	lr: 1.499e-01, eta: 0:24:19, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1456
2022-11-21 12:30:09,956 - mmcls - INFO - Epoch(val) [68][40]	accuracy_top-1: 88.2700, accuracy_top-5: 99.5600
2022-11-21 12:30:20,823 - mmcls - INFO - Epoch [69][100/196]	lr: 1.491e-01, eta: 0:24:08, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.1389
2022-11-21 12:30:32,835 - mmcls - INFO - Epoch(val) [69][40]	accuracy_top-1: 87.8900, accuracy_top-5: 99.6900
2022-11-21 12:30:43,752 - mmcls - INFO - Epoch [70][100/196]	lr: 1.484e-01, eta: 0:23:56, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1412
2022-11-21 12:30:52,040 - mmcls - INFO - Saving checkpoint at 70 epochs
2022-11-21 12:30:56,032 - mmcls - INFO - Epoch(val) [70][40]	accuracy_top-1: 86.8900, accuracy_top-5: 99.5300
2022-11-21 12:31:06,908 - mmcls - INFO - Epoch [71][100/196]	lr: 1.476e-01, eta: 0:23:45, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1521
2022-11-21 12:31:18,761 - mmcls - INFO - Epoch(val) [71][40]	accuracy_top-1: 88.1900, accuracy_top-5: 99.5700
2022-11-21 12:31:29,653 - mmcls - INFO - Epoch [72][100/196]	lr: 1.468e-01, eta: 0:23:34, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1392
2022-11-21 12:31:41,510 - mmcls - INFO - Epoch(val) [72][40]	accuracy_top-1: 88.2700, accuracy_top-5: 99.5800
2022-11-21 12:31:52,467 - mmcls - INFO - Epoch [73][100/196]	lr: 1.460e-01, eta: 0:23:23, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1440
2022-11-21 12:32:04,852 - mmcls - INFO - Epoch(val) [73][40]	accuracy_top-1: 87.5200, accuracy_top-5: 99.5000
2022-11-21 12:32:15,794 - mmcls - INFO - Epoch [74][100/196]	lr: 1.452e-01, eta: 0:23:12, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1315
2022-11-21 12:32:27,674 - mmcls - INFO - Epoch(val) [74][40]	accuracy_top-1: 87.5300, accuracy_top-5: 99.3200
2022-11-21 12:32:38,610 - mmcls - INFO - Epoch [75][100/196]	lr: 1.444e-01, eta: 0:23:00, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1368
2022-11-21 12:32:50,480 - mmcls - INFO - Epoch(val) [75][40]	accuracy_top-1: 87.9400, accuracy_top-5: 99.6600
2022-11-21 12:33:01,345 - mmcls - INFO - Epoch [76][100/196]	lr: 1.435e-01, eta: 0:22:49, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.1317
2022-11-21 12:33:13,280 - mmcls - INFO - Epoch(val) [76][40]	accuracy_top-1: 88.3800, accuracy_top-5: 99.7500
2022-11-21 12:33:24,177 - mmcls - INFO - Epoch [77][100/196]	lr: 1.427e-01, eta: 0:22:38, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1401
2022-11-21 12:33:36,046 - mmcls - INFO - Epoch(val) [77][40]	accuracy_top-1: 87.6600, accuracy_top-5: 99.5300
2022-11-21 12:33:46,966 - mmcls - INFO - Epoch [78][100/196]	lr: 1.419e-01, eta: 0:22:27, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1259
2022-11-21 12:33:58,842 - mmcls - INFO - Epoch(val) [78][40]	accuracy_top-1: 87.4200, accuracy_top-5: 99.5300
2022-11-21 12:34:09,770 - mmcls - INFO - Epoch [79][100/196]	lr: 1.411e-01, eta: 0:22:16, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1287
2022-11-21 12:34:21,647 - mmcls - INFO - Epoch(val) [79][40]	accuracy_top-1: 87.7400, accuracy_top-5: 99.4800
2022-11-21 12:34:32,562 - mmcls - INFO - Epoch [80][100/196]	lr: 1.403e-01, eta: 0:22:04, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1254
2022-11-21 12:34:40,882 - mmcls - INFO - Saving checkpoint at 80 epochs
2022-11-21 12:34:45,060 - mmcls - INFO - Epoch(val) [80][40]	accuracy_top-1: 87.7600, accuracy_top-5: 99.3400
2022-11-21 12:34:55,981 - mmcls - INFO - Epoch [81][100/196]	lr: 1.395e-01, eta: 0:21:53, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1319
2022-11-21 12:35:07,910 - mmcls - INFO - Epoch(val) [81][40]	accuracy_top-1: 88.9800, accuracy_top-5: 99.5500
2022-11-21 12:35:18,803 - mmcls - INFO - Epoch [82][100/196]	lr: 1.387e-01, eta: 0:21:42, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1262
2022-11-21 12:35:30,693 - mmcls - INFO - Epoch(val) [82][40]	accuracy_top-1: 86.6800, accuracy_top-5: 99.4100
2022-11-21 12:35:41,637 - mmcls - INFO - Epoch [83][100/196]	lr: 1.379e-01, eta: 0:21:31, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1187
2022-11-21 12:35:53,614 - mmcls - INFO - Epoch(val) [83][40]	accuracy_top-1: 89.8500, accuracy_top-5: 99.6800
2022-11-21 12:36:04,504 - mmcls - INFO - Epoch [84][100/196]	lr: 1.370e-01, eta: 0:21:20, time: 0.109, data_time: 0.021, memory: 2867, loss: 0.1301
2022-11-21 12:36:16,428 - mmcls - INFO - Epoch(val) [84][40]	accuracy_top-1: 88.5600, accuracy_top-5: 99.5600
2022-11-21 12:36:27,365 - mmcls - INFO - Epoch [85][100/196]	lr: 1.362e-01, eta: 0:21:09, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1243
2022-11-21 12:36:39,246 - mmcls - INFO - Epoch(val) [85][40]	accuracy_top-1: 87.8800, accuracy_top-5: 99.6200
2022-11-21 12:36:50,180 - mmcls - INFO - Epoch [86][100/196]	lr: 1.354e-01, eta: 0:20:58, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1286
2022-11-21 12:37:02,041 - mmcls - INFO - Epoch(val) [86][40]	accuracy_top-1: 88.3100, accuracy_top-5: 99.5300
2022-11-21 12:37:12,934 - mmcls - INFO - Epoch [87][100/196]	lr: 1.346e-01, eta: 0:20:47, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1168
2022-11-21 12:37:24,796 - mmcls - INFO - Epoch(val) [87][40]	accuracy_top-1: 89.0700, accuracy_top-5: 99.6400
2022-11-21 12:37:35,687 - mmcls - INFO - Epoch [88][100/196]	lr: 1.337e-01, eta: 0:20:35, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1172
2022-11-21 12:37:47,573 - mmcls - INFO - Epoch(val) [88][40]	accuracy_top-1: 87.6700, accuracy_top-5: 99.5400
2022-11-21 12:37:58,529 - mmcls - INFO - Epoch [89][100/196]	lr: 1.329e-01, eta: 0:20:24, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1306
2022-11-21 12:38:10,420 - mmcls - INFO - Epoch(val) [89][40]	accuracy_top-1: 88.2200, accuracy_top-5: 99.5600
2022-11-21 12:38:21,335 - mmcls - INFO - Epoch [90][100/196]	lr: 1.321e-01, eta: 0:20:13, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1106
2022-11-21 12:38:29,612 - mmcls - INFO - Saving checkpoint at 90 epochs
2022-11-21 12:38:33,583 - mmcls - INFO - Epoch(val) [90][40]	accuracy_top-1: 86.9800, accuracy_top-5: 99.5600
2022-11-21 12:38:44,451 - mmcls - INFO - Epoch [91][100/196]	lr: 1.312e-01, eta: 0:20:02, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.1077
2022-11-21 12:38:56,317 - mmcls - INFO - Epoch(val) [91][40]	accuracy_top-1: 88.5100, accuracy_top-5: 99.6400
2022-11-21 12:39:07,207 - mmcls - INFO - Epoch [92][100/196]	lr: 1.304e-01, eta: 0:19:51, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1125
2022-11-21 12:39:19,118 - mmcls - INFO - Epoch(val) [92][40]	accuracy_top-1: 84.9300, accuracy_top-5: 99.3800
2022-11-21 12:39:30,053 - mmcls - INFO - Epoch [93][100/196]	lr: 1.295e-01, eta: 0:19:40, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1158
2022-11-21 12:39:42,003 - mmcls - INFO - Epoch(val) [93][40]	accuracy_top-1: 88.9000, accuracy_top-5: 99.6500
2022-11-21 12:39:52,952 - mmcls - INFO - Epoch [94][100/196]	lr: 1.287e-01, eta: 0:19:29, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1107
2022-11-21 12:40:04,843 - mmcls - INFO - Epoch(val) [94][40]	accuracy_top-1: 89.0500, accuracy_top-5: 99.6300
2022-11-21 12:40:15,726 - mmcls - INFO - Epoch [95][100/196]	lr: 1.278e-01, eta: 0:19:18, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1152
2022-11-21 12:40:27,603 - mmcls - INFO - Epoch(val) [95][40]	accuracy_top-1: 88.5600, accuracy_top-5: 99.5900
2022-11-21 12:40:38,514 - mmcls - INFO - Epoch [96][100/196]	lr: 1.270e-01, eta: 0:19:07, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1177
2022-11-21 12:40:50,414 - mmcls - INFO - Epoch(val) [96][40]	accuracy_top-1: 89.3100, accuracy_top-5: 99.7200
2022-11-21 12:41:01,374 - mmcls - INFO - Epoch [97][100/196]	lr: 1.261e-01, eta: 0:18:56, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1190
2022-11-21 12:41:13,240 - mmcls - INFO - Epoch(val) [97][40]	accuracy_top-1: 89.1600, accuracy_top-5: 99.5300
2022-11-21 12:41:24,159 - mmcls - INFO - Epoch [98][100/196]	lr: 1.253e-01, eta: 0:18:45, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1058
2022-11-21 12:41:36,106 - mmcls - INFO - Epoch(val) [98][40]	accuracy_top-1: 90.3100, accuracy_top-5: 99.6600
2022-11-21 12:41:47,057 - mmcls - INFO - Epoch [99][100/196]	lr: 1.244e-01, eta: 0:18:34, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1073
2022-11-21 12:41:58,918 - mmcls - INFO - Epoch(val) [99][40]	accuracy_top-1: 88.0800, accuracy_top-5: 99.5900
2022-11-21 12:42:09,842 - mmcls - INFO - Epoch [100][100/196]	lr: 1.236e-01, eta: 0:18:22, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1122
2022-11-21 12:42:18,133 - mmcls - INFO - Saving checkpoint at 100 epochs
2022-11-21 12:42:22,322 - mmcls - INFO - Epoch(val) [100][40]	accuracy_top-1: 88.4700, accuracy_top-5: 99.6300
2022-11-21 12:42:33,220 - mmcls - INFO - Epoch [101][100/196]	lr: 1.227e-01, eta: 0:18:11, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1056
2022-11-21 12:42:45,246 - mmcls - INFO - Epoch(val) [101][40]	accuracy_top-1: 88.7300, accuracy_top-5: 99.5300
2022-11-21 12:42:56,196 - mmcls - INFO - Epoch [102][100/196]	lr: 1.219e-01, eta: 0:18:00, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.1128
2022-11-21 12:43:08,129 - mmcls - INFO - Epoch(val) [102][40]	accuracy_top-1: 90.7200, accuracy_top-5: 99.7600
2022-11-21 12:43:19,040 - mmcls - INFO - Epoch [103][100/196]	lr: 1.210e-01, eta: 0:17:49, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0918
2022-11-21 12:43:30,927 - mmcls - INFO - Epoch(val) [103][40]	accuracy_top-1: 87.9900, accuracy_top-5: 99.6600
2022-11-21 12:43:41,854 - mmcls - INFO - Epoch [104][100/196]	lr: 1.201e-01, eta: 0:17:38, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1053
2022-11-21 12:43:53,769 - mmcls - INFO - Epoch(val) [104][40]	accuracy_top-1: 89.6100, accuracy_top-5: 99.6300
2022-11-21 12:44:04,665 - mmcls - INFO - Epoch [105][100/196]	lr: 1.192e-01, eta: 0:17:27, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0981
2022-11-21 12:44:16,591 - mmcls - INFO - Epoch(val) [105][40]	accuracy_top-1: 88.1900, accuracy_top-5: 99.5000
2022-11-21 12:44:27,509 - mmcls - INFO - Epoch [106][100/196]	lr: 1.184e-01, eta: 0:17:16, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0970
2022-11-21 12:44:39,377 - mmcls - INFO - Epoch(val) [106][40]	accuracy_top-1: 90.1000, accuracy_top-5: 99.7200
2022-11-21 12:44:50,337 - mmcls - INFO - Epoch [107][100/196]	lr: 1.175e-01, eta: 0:17:05, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0907
2022-11-21 12:45:02,383 - mmcls - INFO - Epoch(val) [107][40]	accuracy_top-1: 89.2700, accuracy_top-5: 99.6600
2022-11-21 12:45:13,271 - mmcls - INFO - Epoch [108][100/196]	lr: 1.166e-01, eta: 0:16:54, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0932
2022-11-21 12:45:25,157 - mmcls - INFO - Epoch(val) [108][40]	accuracy_top-1: 89.7200, accuracy_top-5: 99.6500
2022-11-21 12:45:36,075 - mmcls - INFO - Epoch [109][100/196]	lr: 1.157e-01, eta: 0:16:43, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0948
2022-11-21 12:45:47,991 - mmcls - INFO - Epoch(val) [109][40]	accuracy_top-1: 87.8400, accuracy_top-5: 99.4500
2022-11-21 12:45:58,926 - mmcls - INFO - Epoch [110][100/196]	lr: 1.148e-01, eta: 0:16:32, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0951
2022-11-21 12:46:07,270 - mmcls - INFO - Saving checkpoint at 110 epochs
2022-11-21 12:46:11,249 - mmcls - INFO - Epoch(val) [110][40]	accuracy_top-1: 89.6400, accuracy_top-5: 99.6000
2022-11-21 12:46:22,179 - mmcls - INFO - Epoch [111][100/196]	lr: 1.140e-01, eta: 0:16:21, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.1000
2022-11-21 12:46:34,054 - mmcls - INFO - Epoch(val) [111][40]	accuracy_top-1: 88.8100, accuracy_top-5: 99.6700
2022-11-21 12:46:44,946 - mmcls - INFO - Epoch [112][100/196]	lr: 1.131e-01, eta: 0:16:10, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0954
2022-11-21 12:46:56,924 - mmcls - INFO - Epoch(val) [112][40]	accuracy_top-1: 89.9400, accuracy_top-5: 99.6500
2022-11-21 12:47:07,839 - mmcls - INFO - Epoch [113][100/196]	lr: 1.122e-01, eta: 0:15:59, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0868
2022-11-21 12:47:19,729 - mmcls - INFO - Epoch(val) [113][40]	accuracy_top-1: 87.8900, accuracy_top-5: 99.5900
2022-11-21 12:47:30,635 - mmcls - INFO - Epoch [114][100/196]	lr: 1.113e-01, eta: 0:15:48, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0901
2022-11-21 12:47:42,525 - mmcls - INFO - Epoch(val) [114][40]	accuracy_top-1: 90.3200, accuracy_top-5: 99.6000
2022-11-21 12:47:53,495 - mmcls - INFO - Epoch [115][100/196]	lr: 1.104e-01, eta: 0:15:37, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0844
2022-11-21 12:48:05,469 - mmcls - INFO - Epoch(val) [115][40]	accuracy_top-1: 88.4500, accuracy_top-5: 99.5200
2022-11-21 12:48:16,420 - mmcls - INFO - Epoch [116][100/196]	lr: 1.095e-01, eta: 0:15:26, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0900
2022-11-21 12:48:28,322 - mmcls - INFO - Epoch(val) [116][40]	accuracy_top-1: 86.6100, accuracy_top-5: 99.1200
2022-11-21 12:48:39,237 - mmcls - INFO - Epoch [117][100/196]	lr: 1.086e-01, eta: 0:15:15, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0950
2022-11-21 12:48:51,098 - mmcls - INFO - Epoch(val) [117][40]	accuracy_top-1: 89.9000, accuracy_top-5: 99.5200
2022-11-21 12:49:02,036 - mmcls - INFO - Epoch [118][100/196]	lr: 1.076e-01, eta: 0:15:04, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0828
2022-11-21 12:49:13,908 - mmcls - INFO - Epoch(val) [118][40]	accuracy_top-1: 90.0400, accuracy_top-5: 99.7400
2022-11-21 12:49:24,858 - mmcls - INFO - Epoch [119][100/196]	lr: 1.067e-01, eta: 0:14:53, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0876
2022-11-21 12:49:36,728 - mmcls - INFO - Epoch(val) [119][40]	accuracy_top-1: 87.1600, accuracy_top-5: 99.5800
2022-11-21 12:49:47,639 - mmcls - INFO - Epoch [120][100/196]	lr: 1.058e-01, eta: 0:14:42, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0816
2022-11-21 12:49:55,915 - mmcls - INFO - Saving checkpoint at 120 epochs
2022-11-21 12:49:59,900 - mmcls - INFO - Epoch(val) [120][40]	accuracy_top-1: 89.8400, accuracy_top-5: 99.6200
2022-11-21 12:50:10,837 - mmcls - INFO - Epoch [121][100/196]	lr: 1.049e-01, eta: 0:14:31, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0912
2022-11-21 12:50:22,726 - mmcls - INFO - Epoch(val) [121][40]	accuracy_top-1: 88.1100, accuracy_top-5: 99.4700
2022-11-21 12:50:33,642 - mmcls - INFO - Epoch [122][100/196]	lr: 1.040e-01, eta: 0:14:20, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0777
2022-11-21 12:50:45,654 - mmcls - INFO - Epoch(val) [122][40]	accuracy_top-1: 87.7500, accuracy_top-5: 99.3600
2022-11-21 12:50:56,586 - mmcls - INFO - Epoch [123][100/196]	lr: 1.030e-01, eta: 0:14:09, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0850
2022-11-21 12:51:08,605 - mmcls - INFO - Epoch(val) [123][40]	accuracy_top-1: 88.0400, accuracy_top-5: 99.4300
2022-11-21 12:51:19,489 - mmcls - INFO - Epoch [124][100/196]	lr: 1.021e-01, eta: 0:13:58, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0787
2022-11-21 12:51:31,383 - mmcls - INFO - Epoch(val) [124][40]	accuracy_top-1: 89.0200, accuracy_top-5: 99.4500
2022-11-21 12:51:42,290 - mmcls - INFO - Epoch [125][100/196]	lr: 1.012e-01, eta: 0:13:47, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0887
2022-11-21 12:51:54,155 - mmcls - INFO - Epoch(val) [125][40]	accuracy_top-1: 88.6500, accuracy_top-5: 99.4900
2022-11-21 12:52:05,078 - mmcls - INFO - Epoch [126][100/196]	lr: 1.002e-01, eta: 0:13:36, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0778
2022-11-21 12:52:17,051 - mmcls - INFO - Epoch(val) [126][40]	accuracy_top-1: 88.3200, accuracy_top-5: 99.5600
2022-11-21 12:52:27,945 - mmcls - INFO - Epoch [127][100/196]	lr: 9.929e-02, eta: 0:13:25, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0809
2022-11-21 12:52:39,826 - mmcls - INFO - Epoch(val) [127][40]	accuracy_top-1: 88.3000, accuracy_top-5: 99.5400
2022-11-21 12:52:50,740 - mmcls - INFO - Epoch [128][100/196]	lr: 9.834e-02, eta: 0:13:14, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0722
2022-11-21 12:53:02,616 - mmcls - INFO - Epoch(val) [128][40]	accuracy_top-1: 88.2700, accuracy_top-5: 99.5000
2022-11-21 12:53:13,571 - mmcls - INFO - Epoch [129][100/196]	lr: 9.739e-02, eta: 0:13:03, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0747
2022-11-21 12:53:25,442 - mmcls - INFO - Epoch(val) [129][40]	accuracy_top-1: 90.1200, accuracy_top-5: 99.7100
2022-11-21 12:53:36,391 - mmcls - INFO - Epoch [130][100/196]	lr: 9.644e-02, eta: 0:12:52, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0775
2022-11-21 12:53:44,649 - mmcls - INFO - Saving checkpoint at 130 epochs
2022-11-21 12:53:48,615 - mmcls - INFO - Epoch(val) [130][40]	accuracy_top-1: 88.7900, accuracy_top-5: 99.6000
2022-11-21 12:53:59,524 - mmcls - INFO - Epoch [131][100/196]	lr: 9.548e-02, eta: 0:12:41, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0792
2022-11-21 12:54:11,425 - mmcls - INFO - Epoch(val) [131][40]	accuracy_top-1: 89.7700, accuracy_top-5: 99.7500
2022-11-21 12:54:22,364 - mmcls - INFO - Epoch [132][100/196]	lr: 9.452e-02, eta: 0:12:30, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0702
2022-11-21 12:54:34,220 - mmcls - INFO - Epoch(val) [132][40]	accuracy_top-1: 90.9500, accuracy_top-5: 99.7100
2022-11-21 12:54:45,095 - mmcls - INFO - Epoch [133][100/196]	lr: 9.355e-02, eta: 0:12:19, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0759
2022-11-21 12:54:56,951 - mmcls - INFO - Epoch(val) [133][40]	accuracy_top-1: 88.5300, accuracy_top-5: 99.6100
2022-11-21 12:55:07,869 - mmcls - INFO - Epoch [134][100/196]	lr: 9.258e-02, eta: 0:12:08, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0637
2022-11-21 12:55:19,731 - mmcls - INFO - Epoch(val) [134][40]	accuracy_top-1: 89.6900, accuracy_top-5: 99.6400
2022-11-21 12:55:30,668 - mmcls - INFO - Epoch [135][100/196]	lr: 9.160e-02, eta: 0:11:57, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0746
2022-11-21 12:55:42,649 - mmcls - INFO - Epoch(val) [135][40]	accuracy_top-1: 90.8500, accuracy_top-5: 99.6600
2022-11-21 12:55:53,567 - mmcls - INFO - Epoch [136][100/196]	lr: 9.062e-02, eta: 0:11:46, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0659
2022-11-21 12:56:05,488 - mmcls - INFO - Epoch(val) [136][40]	accuracy_top-1: 89.8000, accuracy_top-5: 99.6300
2022-11-21 12:56:16,362 - mmcls - INFO - Epoch [137][100/196]	lr: 8.964e-02, eta: 0:11:35, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0639
2022-11-21 12:56:28,231 - mmcls - INFO - Epoch(val) [137][40]	accuracy_top-1: 90.4500, accuracy_top-5: 99.7300
2022-11-21 12:56:39,120 - mmcls - INFO - Epoch [138][100/196]	lr: 8.865e-02, eta: 0:11:24, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0714
2022-11-21 12:56:51,037 - mmcls - INFO - Epoch(val) [138][40]	accuracy_top-1: 91.3700, accuracy_top-5: 99.7700
2022-11-21 12:57:01,884 - mmcls - INFO - Epoch [139][100/196]	lr: 8.765e-02, eta: 0:11:13, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0587
2022-11-21 12:57:13,802 - mmcls - INFO - Epoch(val) [139][40]	accuracy_top-1: 89.8100, accuracy_top-5: 99.6900
2022-11-21 12:57:24,753 - mmcls - INFO - Epoch [140][100/196]	lr: 8.666e-02, eta: 0:11:02, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0741
2022-11-21 12:57:33,034 - mmcls - INFO - Saving checkpoint at 140 epochs
2022-11-21 12:57:37,010 - mmcls - INFO - Epoch(val) [140][40]	accuracy_top-1: 90.4800, accuracy_top-5: 99.5900
2022-11-21 12:57:47,919 - mmcls - INFO - Epoch [141][100/196]	lr: 8.565e-02, eta: 0:10:51, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0589
2022-11-21 12:57:59,784 - mmcls - INFO - Epoch(val) [141][40]	accuracy_top-1: 89.0100, accuracy_top-5: 99.5400
2022-11-21 12:58:10,751 - mmcls - INFO - Epoch [142][100/196]	lr: 8.464e-02, eta: 0:10:40, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0702
2022-11-21 12:58:22,663 - mmcls - INFO - Epoch(val) [142][40]	accuracy_top-1: 90.2400, accuracy_top-5: 99.5900
2022-11-21 12:58:33,582 - mmcls - INFO - Epoch [143][100/196]	lr: 8.363e-02, eta: 0:10:29, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0634
2022-11-21 12:58:45,477 - mmcls - INFO - Epoch(val) [143][40]	accuracy_top-1: 90.5800, accuracy_top-5: 99.7100
2022-11-21 12:58:56,397 - mmcls - INFO - Epoch [144][100/196]	lr: 8.261e-02, eta: 0:10:18, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0622
2022-11-21 12:59:08,290 - mmcls - INFO - Epoch(val) [144][40]	accuracy_top-1: 90.6000, accuracy_top-5: 99.4500
2022-11-21 12:59:19,198 - mmcls - INFO - Epoch [145][100/196]	lr: 8.158e-02, eta: 0:10:07, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0658
2022-11-21 12:59:34,244 - mmcls - INFO - Epoch(val) [145][40]	accuracy_top-1: 90.3200, accuracy_top-5: 99.7000
2022-11-21 12:59:45,157 - mmcls - INFO - Epoch [146][100/196]	lr: 8.055e-02, eta: 0:09:56, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0613
2022-11-21 12:59:57,104 - mmcls - INFO - Epoch(val) [146][40]	accuracy_top-1: 90.7500, accuracy_top-5: 99.7600
2022-11-21 13:00:08,002 - mmcls - INFO - Epoch [147][100/196]	lr: 7.952e-02, eta: 0:09:45, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0562
2022-11-21 13:00:19,972 - mmcls - INFO - Epoch(val) [147][40]	accuracy_top-1: 88.3800, accuracy_top-5: 99.5600
2022-11-21 13:00:30,862 - mmcls - INFO - Epoch [148][100/196]	lr: 7.847e-02, eta: 0:09:34, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0618
2022-11-21 13:00:42,797 - mmcls - INFO - Epoch(val) [148][40]	accuracy_top-1: 91.4700, accuracy_top-5: 99.6400
2022-11-21 13:00:53,664 - mmcls - INFO - Epoch [149][100/196]	lr: 7.743e-02, eta: 0:09:23, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0575
2022-11-21 13:01:05,557 - mmcls - INFO - Epoch(val) [149][40]	accuracy_top-1: 91.3100, accuracy_top-5: 99.7900
2022-11-21 13:01:16,436 - mmcls - INFO - Epoch [150][100/196]	lr: 7.637e-02, eta: 0:09:12, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0533
2022-11-21 13:01:24,706 - mmcls - INFO - Saving checkpoint at 150 epochs
2022-11-21 13:01:28,662 - mmcls - INFO - Epoch(val) [150][40]	accuracy_top-1: 91.2300, accuracy_top-5: 99.7800
2022-11-21 13:01:39,573 - mmcls - INFO - Epoch [151][100/196]	lr: 7.531e-02, eta: 0:09:01, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0533
2022-11-21 13:01:51,483 - mmcls - INFO - Epoch(val) [151][40]	accuracy_top-1: 90.5000, accuracy_top-5: 99.7500
2022-11-21 13:02:02,385 - mmcls - INFO - Epoch [152][100/196]	lr: 7.424e-02, eta: 0:08:50, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0615
2022-11-21 13:02:14,239 - mmcls - INFO - Epoch(val) [152][40]	accuracy_top-1: 90.6300, accuracy_top-5: 99.6800
2022-11-21 13:02:25,167 - mmcls - INFO - Epoch [153][100/196]	lr: 7.317e-02, eta: 0:08:39, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0546
2022-11-21 13:02:37,064 - mmcls - INFO - Epoch(val) [153][40]	accuracy_top-1: 91.9800, accuracy_top-5: 99.7000
2022-11-21 13:02:47,939 - mmcls - INFO - Epoch [154][100/196]	lr: 7.209e-02, eta: 0:08:28, time: 0.108, data_time: 0.021, memory: 2867, loss: 0.0484
2022-11-21 13:02:59,812 - mmcls - INFO - Epoch(val) [154][40]	accuracy_top-1: 90.9300, accuracy_top-5: 99.6100
2022-11-21 13:03:10,731 - mmcls - INFO - Epoch [155][100/196]	lr: 7.100e-02, eta: 0:08:17, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0545
2022-11-21 13:03:22,627 - mmcls - INFO - Epoch(val) [155][40]	accuracy_top-1: 88.9400, accuracy_top-5: 99.5900
2022-11-21 13:03:33,537 - mmcls - INFO - Epoch [156][100/196]	lr: 6.991e-02, eta: 0:08:06, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0499
2022-11-21 13:03:45,325 - mmcls - INFO - Epoch(val) [156][40]	accuracy_top-1: 91.0100, accuracy_top-5: 99.7400
2022-11-21 13:03:56,244 - mmcls - INFO - Epoch [157][100/196]	lr: 6.881e-02, eta: 0:07:55, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0516
2022-11-21 13:04:08,006 - mmcls - INFO - Epoch(val) [157][40]	accuracy_top-1: 90.0900, accuracy_top-5: 99.6500
2022-11-21 13:04:18,784 - mmcls - INFO - Epoch [158][100/196]	lr: 6.770e-02, eta: 0:07:44, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0428
2022-11-21 13:04:30,473 - mmcls - INFO - Epoch(val) [158][40]	accuracy_top-1: 90.5600, accuracy_top-5: 99.7400
2022-11-21 13:04:41,258 - mmcls - INFO - Epoch [159][100/196]	lr: 6.658e-02, eta: 0:07:33, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0533
2022-11-21 13:04:52,920 - mmcls - INFO - Epoch(val) [159][40]	accuracy_top-1: 91.4100, accuracy_top-5: 99.6700
2022-11-21 13:05:03,790 - mmcls - INFO - Epoch [160][100/196]	lr: 6.545e-02, eta: 0:07:23, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0400
2022-11-21 13:05:12,035 - mmcls - INFO - Saving checkpoint at 160 epochs
2022-11-21 13:05:15,893 - mmcls - INFO - Epoch(val) [160][40]	accuracy_top-1: 90.0800, accuracy_top-5: 99.7000
2022-11-21 13:05:26,682 - mmcls - INFO - Epoch [161][100/196]	lr: 6.432e-02, eta: 0:07:12, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0512
2022-11-21 13:05:38,398 - mmcls - INFO - Epoch(val) [161][40]	accuracy_top-1: 91.6500, accuracy_top-5: 99.6100
2022-11-21 13:05:49,225 - mmcls - INFO - Epoch [162][100/196]	lr: 6.318e-02, eta: 0:07:01, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0437
2022-11-21 13:06:00,986 - mmcls - INFO - Epoch(val) [162][40]	accuracy_top-1: 92.1800, accuracy_top-5: 99.7500
2022-11-21 13:06:11,897 - mmcls - INFO - Epoch [163][100/196]	lr: 6.203e-02, eta: 0:06:50, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0393
2022-11-21 13:06:23,600 - mmcls - INFO - Epoch(val) [163][40]	accuracy_top-1: 91.4700, accuracy_top-5: 99.6300
2022-11-21 13:06:34,429 - mmcls - INFO - Epoch [164][100/196]	lr: 6.087e-02, eta: 0:06:39, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0420
2022-11-21 13:06:46,154 - mmcls - INFO - Epoch(val) [164][40]	accuracy_top-1: 91.7700, accuracy_top-5: 99.6800
2022-11-21 13:06:56,976 - mmcls - INFO - Epoch [165][100/196]	lr: 5.969e-02, eta: 0:06:28, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0390
2022-11-21 13:07:08,801 - mmcls - INFO - Epoch(val) [165][40]	accuracy_top-1: 91.3200, accuracy_top-5: 99.7100
2022-11-21 13:07:19,637 - mmcls - INFO - Epoch [166][100/196]	lr: 5.851e-02, eta: 0:06:17, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0363
2022-11-21 13:07:31,334 - mmcls - INFO - Epoch(val) [166][40]	accuracy_top-1: 91.3800, accuracy_top-5: 99.6500
2022-11-21 13:07:42,129 - mmcls - INFO - Epoch [167][100/196]	lr: 5.732e-02, eta: 0:06:06, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0337
2022-11-21 13:07:53,951 - mmcls - INFO - Epoch(val) [167][40]	accuracy_top-1: 91.4100, accuracy_top-5: 99.7100
2022-11-21 13:08:04,841 - mmcls - INFO - Epoch [168][100/196]	lr: 5.612e-02, eta: 0:05:55, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0389
2022-11-21 13:08:16,764 - mmcls - INFO - Epoch(val) [168][40]	accuracy_top-1: 91.5000, accuracy_top-5: 99.7000
2022-11-21 13:08:27,655 - mmcls - INFO - Epoch [169][100/196]	lr: 5.491e-02, eta: 0:05:44, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0331
2022-11-21 13:08:39,373 - mmcls - INFO - Epoch(val) [169][40]	accuracy_top-1: 92.4500, accuracy_top-5: 99.7600
2022-11-21 13:08:50,184 - mmcls - INFO - Epoch [170][100/196]	lr: 5.369e-02, eta: 0:05:33, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0292
2022-11-21 13:08:58,397 - mmcls - INFO - Saving checkpoint at 170 epochs
2022-11-21 13:09:02,180 - mmcls - INFO - Epoch(val) [170][40]	accuracy_top-1: 91.9200, accuracy_top-5: 99.6900
2022-11-21 13:09:12,998 - mmcls - INFO - Epoch [171][100/196]	lr: 5.245e-02, eta: 0:05:22, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0340
2022-11-21 13:09:24,729 - mmcls - INFO - Epoch(val) [171][40]	accuracy_top-1: 92.2500, accuracy_top-5: 99.7000
2022-11-21 13:09:35,508 - mmcls - INFO - Epoch [172][100/196]	lr: 5.120e-02, eta: 0:05:11, time: 0.108, data_time: 0.021, memory: 2867, loss: 0.0348
2022-11-21 13:09:47,192 - mmcls - INFO - Epoch(val) [172][40]	accuracy_top-1: 92.2600, accuracy_top-5: 99.6900
2022-11-21 13:09:58,012 - mmcls - INFO - Epoch [173][100/196]	lr: 4.994e-02, eta: 0:05:00, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0240
2022-11-21 13:10:09,849 - mmcls - INFO - Epoch(val) [173][40]	accuracy_top-1: 92.4800, accuracy_top-5: 99.7100
2022-11-21 13:10:20,690 - mmcls - INFO - Epoch [174][100/196]	lr: 4.866e-02, eta: 0:04:49, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0235
2022-11-21 13:10:32,419 - mmcls - INFO - Epoch(val) [174][40]	accuracy_top-1: 92.1700, accuracy_top-5: 99.6200
2022-11-21 13:10:43,230 - mmcls - INFO - Epoch [175][100/196]	lr: 4.737e-02, eta: 0:04:38, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0260
2022-11-21 13:10:54,942 - mmcls - INFO - Epoch(val) [175][40]	accuracy_top-1: 92.4100, accuracy_top-5: 99.6800
2022-11-21 13:11:05,739 - mmcls - INFO - Epoch [176][100/196]	lr: 4.607e-02, eta: 0:04:27, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0211
2022-11-21 13:11:17,502 - mmcls - INFO - Epoch(val) [176][40]	accuracy_top-1: 92.3000, accuracy_top-5: 99.8000
2022-11-21 13:11:28,370 - mmcls - INFO - Epoch [177][100/196]	lr: 4.475e-02, eta: 0:04:16, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0257
2022-11-21 13:11:40,094 - mmcls - INFO - Epoch(val) [177][40]	accuracy_top-1: 92.8500, accuracy_top-5: 99.8200
2022-11-21 13:11:50,864 - mmcls - INFO - Epoch [178][100/196]	lr: 4.341e-02, eta: 0:04:05, time: 0.107, data_time: 0.022, memory: 2867, loss: 0.0209
2022-11-21 13:12:02,720 - mmcls - INFO - Epoch(val) [178][40]	accuracy_top-1: 92.6000, accuracy_top-5: 99.8300
2022-11-21 13:12:13,546 - mmcls - INFO - Epoch [179][100/196]	lr: 4.205e-02, eta: 0:03:54, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0225
2022-11-21 13:12:25,316 - mmcls - INFO - Epoch(val) [179][40]	accuracy_top-1: 93.0300, accuracy_top-5: 99.8100
2022-11-21 13:12:36,216 - mmcls - INFO - Epoch [180][100/196]	lr: 4.067e-02, eta: 0:03:43, time: 0.109, data_time: 0.023, memory: 2867, loss: 0.0170
2022-11-21 13:12:44,448 - mmcls - INFO - Saving checkpoint at 180 epochs
2022-11-21 13:12:48,576 - mmcls - INFO - Epoch(val) [180][40]	accuracy_top-1: 92.6000, accuracy_top-5: 99.7700
2022-11-21 13:12:59,412 - mmcls - INFO - Epoch [181][100/196]	lr: 3.928e-02, eta: 0:03:32, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0126
2022-11-21 13:13:11,263 - mmcls - INFO - Epoch(val) [181][40]	accuracy_top-1: 93.0600, accuracy_top-5: 99.7300
2022-11-21 13:13:22,063 - mmcls - INFO - Epoch [182][100/196]	lr: 3.786e-02, eta: 0:03:22, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0167
2022-11-21 13:13:33,790 - mmcls - INFO - Epoch(val) [182][40]	accuracy_top-1: 92.4500, accuracy_top-5: 99.7300
2022-11-21 13:13:44,626 - mmcls - INFO - Epoch [183][100/196]	lr: 3.642e-02, eta: 0:03:11, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0111
2022-11-21 13:13:56,472 - mmcls - INFO - Epoch(val) [183][40]	accuracy_top-1: 92.9900, accuracy_top-5: 99.7700
2022-11-21 13:14:07,335 - mmcls - INFO - Epoch [184][100/196]	lr: 3.495e-02, eta: 0:03:00, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0119
2022-11-21 13:14:19,160 - mmcls - INFO - Epoch(val) [184][40]	accuracy_top-1: 93.6900, accuracy_top-5: 99.8000
2022-11-21 13:14:30,023 - mmcls - INFO - Epoch [185][100/196]	lr: 3.346e-02, eta: 0:02:49, time: 0.108, data_time: 0.023, memory: 2867, loss: 0.0089
2022-11-21 13:14:41,752 - mmcls - INFO - Epoch(val) [185][40]	accuracy_top-1: 93.5700, accuracy_top-5: 99.7000
2022-11-21 13:14:52,578 - mmcls - INFO - Epoch [186][100/196]	lr: 3.194e-02, eta: 0:02:38, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0096
2022-11-21 13:15:04,514 - mmcls - INFO - Epoch(val) [186][40]	accuracy_top-1: 93.1900, accuracy_top-5: 99.8300
2022-11-21 13:15:15,348 - mmcls - INFO - Epoch [187][100/196]	lr: 3.038e-02, eta: 0:02:27, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0064
2022-11-21 13:15:27,132 - mmcls - INFO - Epoch(val) [187][40]	accuracy_top-1: 93.7900, accuracy_top-5: 99.7400
2022-11-21 13:15:38,011 - mmcls - INFO - Epoch [188][100/196]	lr: 2.879e-02, eta: 0:02:16, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0065
2022-11-21 13:15:49,756 - mmcls - INFO - Epoch(val) [188][40]	accuracy_top-1: 93.9400, accuracy_top-5: 99.7600
2022-11-21 13:16:00,578 - mmcls - INFO - Epoch [189][100/196]	lr: 2.717e-02, eta: 0:02:05, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0050
2022-11-21 13:16:12,332 - mmcls - INFO - Epoch(val) [189][40]	accuracy_top-1: 93.5700, accuracy_top-5: 99.8200
2022-11-21 13:16:23,176 - mmcls - INFO - Epoch [190][100/196]	lr: 2.550e-02, eta: 0:01:54, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0054
2022-11-21 13:16:31,481 - mmcls - INFO - Saving checkpoint at 190 epochs
2022-11-21 13:16:35,500 - mmcls - INFO - Epoch(val) [190][40]	accuracy_top-1: 93.9700, accuracy_top-5: 99.7800
2022-11-21 13:16:46,372 - mmcls - INFO - Epoch [191][100/196]	lr: 2.378e-02, eta: 0:01:43, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0048
2022-11-21 13:16:58,126 - mmcls - INFO - Epoch(val) [191][40]	accuracy_top-1: 94.0100, accuracy_top-5: 99.8300
2022-11-21 13:17:08,962 - mmcls - INFO - Epoch [192][100/196]	lr: 2.200e-02, eta: 0:01:32, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0037
2022-11-21 13:17:20,719 - mmcls - INFO - Epoch(val) [192][40]	accuracy_top-1: 94.0400, accuracy_top-5: 99.8200
2022-11-21 13:17:31,584 - mmcls - INFO - Epoch [193][100/196]	lr: 2.016e-02, eta: 0:01:21, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0037
2022-11-21 13:17:43,398 - mmcls - INFO - Epoch(val) [193][40]	accuracy_top-1: 94.4000, accuracy_top-5: 99.7800
2022-11-21 13:17:54,249 - mmcls - INFO - Epoch [194][100/196]	lr: 1.825e-02, eta: 0:01:10, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0030
2022-11-21 13:18:06,199 - mmcls - INFO - Epoch(val) [194][40]	accuracy_top-1: 94.0800, accuracy_top-5: 99.8400
2022-11-21 13:18:17,042 - mmcls - INFO - Epoch [195][100/196]	lr: 1.625e-02, eta: 0:00:59, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0023
2022-11-21 13:18:28,767 - mmcls - INFO - Epoch(val) [195][40]	accuracy_top-1: 94.2800, accuracy_top-5: 99.8400
2022-11-21 13:18:39,600 - mmcls - INFO - Epoch [196][100/196]	lr: 1.413e-02, eta: 0:00:49, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0018
2022-11-21 13:18:51,352 - mmcls - INFO - Epoch(val) [196][40]	accuracy_top-1: 94.2600, accuracy_top-5: 99.8500
2022-11-21 13:19:02,188 - mmcls - INFO - Epoch [197][100/196]	lr: 1.186e-02, eta: 0:00:38, time: 0.108, data_time: 0.021, memory: 2867, loss: 0.0022
2022-11-21 13:19:13,946 - mmcls - INFO - Epoch(val) [197][40]	accuracy_top-1: 94.5600, accuracy_top-5: 99.8400
2022-11-21 13:19:24,763 - mmcls - INFO - Epoch [198][100/196]	lr: 9.390e-03, eta: 0:00:27, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0018
2022-11-21 13:19:36,542 - mmcls - INFO - Epoch(val) [198][40]	accuracy_top-1: 94.4200, accuracy_top-5: 99.8100
2022-11-21 13:19:47,375 - mmcls - INFO - Epoch [199][100/196]	lr: 6.591e-03, eta: 0:00:16, time: 0.108, data_time: 0.022, memory: 2867, loss: 0.0018
2022-11-21 13:19:59,232 - mmcls - INFO - Epoch(val) [199][40]	accuracy_top-1: 94.4300, accuracy_top-5: 99.8200
2022-11-21 13:20:10,134 - mmcls - INFO - Epoch [200][100/196]	lr: 3.094e-03, eta: 0:00:05, time: 0.109, data_time: 0.022, memory: 2867, loss: 0.0015
2022-11-21 13:20:18,359 - mmcls - INFO - Saving checkpoint at 200 epochs
2022-11-21 13:20:22,342 - mmcls - INFO - Epoch(val) [200][40]	accuracy_top-1: 94.5300, accuracy_top-5: 99.8100
